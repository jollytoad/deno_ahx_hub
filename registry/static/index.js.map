{
  "version": 3,
  "sources": ["https://raw.githubusercontent.com/bigskysoftware/htmx/v1.9.5/src/htmx.js", "../../htmx/htmx-global.js", "../../htmx/css-rules.js", "../../htmx/observe.js", "../../htmx/data-url.js", "../../htmx/config.js"],
  "sourcesContent": ["// UMD insanity\n// This code sets up support for (in order) AMD, ES6 modules, and globals.\n(function (root, factory) {\n    //@ts-ignore\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        //@ts-ignore\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals\n        root.htmx = root.htmx || factory();\n    }\n}(typeof self !== 'undefined' ? self : this, function () {\nreturn (function () {\n        'use strict';\n\n        // Public API\n        //** @type {import(\"./htmx\").HtmxApi} */\n        // TODO: list all methods in public API\n        var htmx = {\n            onLoad: onLoadHelper,\n            process: processNode,\n            on: addEventListenerImpl,\n            off: removeEventListenerImpl,\n            trigger : triggerEvent,\n            ajax : ajaxHelper,\n            find : find,\n            findAll : findAll,\n            closest : closest,\n            values : function(elt, type){\n                var inputValues = getInputValues(elt, type || \"post\");\n                return inputValues.values;\n            },\n            remove : removeElement,\n            addClass : addClassToElement,\n            removeClass : removeClassFromElement,\n            toggleClass : toggleClassOnElement,\n            takeClass : takeClassForElement,\n            defineExtension : defineExtension,\n            removeExtension : removeExtension,\n            logAll : logAll,\n            logNone : logNone,\n            logger : null,\n            config : {\n                historyEnabled:true,\n                historyCacheSize:10,\n                refreshOnHistoryMiss:false,\n                defaultSwapStyle:'innerHTML',\n                defaultSwapDelay:0,\n                defaultSettleDelay:20,\n                includeIndicatorStyles:true,\n                indicatorClass:'htmx-indicator',\n                requestClass:'htmx-request',\n                addedClass:'htmx-added',\n                settlingClass:'htmx-settling',\n                swappingClass:'htmx-swapping',\n                allowEval:true,\n                allowScriptTags:true,\n                inlineScriptNonce:'',\n                attributesToSettle:[\"class\", \"style\", \"width\", \"height\"],\n                withCredentials:false,\n                timeout:0,\n                wsReconnectDelay: 'full-jitter',\n                wsBinaryType: 'blob',\n                disableSelector: \"[hx-disable], [data-hx-disable]\",\n                useTemplateFragments: false,\n                scrollBehavior: 'smooth',\n                defaultFocusScroll: false,\n                getCacheBusterParam: false,\n                globalViewTransitions: false,\n                methodsThatUseUrlParams: [\"get\"],\n                selfRequestsOnly: false\n            },\n            parseInterval:parseInterval,\n            _:internalEval,\n            createEventSource: function(url){\n                return new EventSource(url, {withCredentials:true})\n            },\n            createWebSocket: function(url){\n                var sock = new WebSocket(url, []);\n                sock.binaryType = htmx.config.wsBinaryType;\n                return sock;\n            },\n            version: \"1.9.5\"\n        };\n\n        /** @type {import(\"./htmx\").HtmxInternalApi} */\n        var internalAPI = {\n            addTriggerHandler: addTriggerHandler,\n            bodyContains: bodyContains,\n            canAccessLocalStorage: canAccessLocalStorage,\n            findThisElement: findThisElement,\n            filterValues: filterValues,\n            hasAttribute: hasAttribute,\n            getAttributeValue: getAttributeValue,\n            getClosestAttributeValue: getClosestAttributeValue,\n            getClosestMatch: getClosestMatch,\n            getExpressionVars: getExpressionVars,\n            getHeaders: getHeaders,\n            getInputValues: getInputValues,\n            getInternalData: getInternalData,\n            getSwapSpecification: getSwapSpecification,\n            getTriggerSpecs: getTriggerSpecs,\n            getTarget: getTarget,\n            makeFragment: makeFragment,\n            mergeObjects: mergeObjects,\n            makeSettleInfo: makeSettleInfo,\n            oobSwap: oobSwap,\n            querySelectorExt: querySelectorExt,\n            selectAndSwap: selectAndSwap,\n            settleImmediately: settleImmediately,\n            shouldCancel: shouldCancel,\n            triggerEvent: triggerEvent,\n            triggerErrorEvent: triggerErrorEvent,\n            withExtensions: withExtensions,\n        }\n\n        var VERBS = ['get', 'post', 'put', 'delete', 'patch'];\n        var VERB_SELECTOR = VERBS.map(function(verb){\n            return \"[hx-\" + verb + \"], [data-hx-\" + verb + \"]\"\n        }).join(\", \");\n\n        //====================================================================\n        // Utilities\n        //====================================================================\n\n        function parseInterval(str) {\n            if (str == undefined)  {\n                return undefined\n            }\n            if (str.slice(-2) == \"ms\") {\n                return parseFloat(str.slice(0,-2)) || undefined\n            }\n            if (str.slice(-1) == \"s\") {\n                return (parseFloat(str.slice(0,-1)) * 1000) || undefined\n            }\n            if (str.slice(-1) == \"m\") {\n                return (parseFloat(str.slice(0,-1)) * 1000 * 60) || undefined\n            }\n            return parseFloat(str) || undefined\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {string} name\n         * @returns {(string | null)}\n         */\n        function getRawAttribute(elt, name) {\n            return elt.getAttribute && elt.getAttribute(name);\n        }\n\n        // resolve with both hx and data-hx prefixes\n        function hasAttribute(elt, qualifiedName) {\n            return elt.hasAttribute && (elt.hasAttribute(qualifiedName) ||\n                elt.hasAttribute(\"data-\" + qualifiedName));\n        }\n\n        /**\n         *\n         * @param {HTMLElement} elt\n         * @param {string} qualifiedName\n         * @returns {(string | null)}\n         */\n        function getAttributeValue(elt, qualifiedName) {\n            return getRawAttribute(elt, qualifiedName) || getRawAttribute(elt, \"data-\" + qualifiedName);\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @returns {HTMLElement | null}\n         */\n        function parentElt(elt) {\n            return elt.parentElement;\n        }\n\n        /**\n         * @returns {Document}\n         */\n        function getDocument() {\n            return document;\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {(e:HTMLElement) => boolean} condition\n         * @returns {HTMLElement | null}\n         */\n        function getClosestMatch(elt, condition) {\n            while (elt && !condition(elt)) {\n                elt = parentElt(elt);\n            }\n\n            return elt ? elt : null;\n        }\n\n        function getAttributeValueWithDisinheritance(initialElement, ancestor, attributeName){\n            var attributeValue = getAttributeValue(ancestor, attributeName);\n            var disinherit = getAttributeValue(ancestor, \"hx-disinherit\");\n            if (initialElement !== ancestor && disinherit && (disinherit === \"*\" || disinherit.split(\" \").indexOf(attributeName) >= 0)) {\n                return \"unset\";\n            } else {\n                return attributeValue\n            }\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {string} attributeName\n         * @returns {string | null}\n         */\n        function getClosestAttributeValue(elt, attributeName) {\n            var closestAttr = null;\n            getClosestMatch(elt, function (e) {\n                return closestAttr = getAttributeValueWithDisinheritance(elt, e, attributeName);\n            });\n            if (closestAttr !== \"unset\") {\n                return closestAttr;\n            }\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {string} selector\n         * @returns {boolean}\n         */\n        function matches(elt, selector) {\n            // @ts-ignore: non-standard properties for browser compatibility\n            // noinspection JSUnresolvedVariable\n            var matchesFunction = elt.matches || elt.matchesSelector || elt.msMatchesSelector || elt.mozMatchesSelector || elt.webkitMatchesSelector || elt.oMatchesSelector;\n            return matchesFunction && matchesFunction.call(elt, selector);\n        }\n\n        /**\n         * @param {string} str\n         * @returns {string}\n         */\n        function getStartTag(str) {\n            var tagMatcher = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i\n            var match = tagMatcher.exec( str );\n            if (match) {\n                return match[1].toLowerCase();\n            } else {\n                return \"\";\n            }\n        }\n\n        /**\n         *\n         * @param {string} resp\n         * @param {number} depth\n         * @returns {Element}\n         */\n        function parseHTML(resp, depth) {\n            var parser = new DOMParser();\n            var responseDoc = parser.parseFromString(resp, \"text/html\");\n\n            /** @type {Element} */\n            var responseNode = responseDoc.body;\n            while (depth > 0) {\n                depth--;\n                // @ts-ignore\n                responseNode = responseNode.firstChild;\n            }\n            if (responseNode == null) {\n                // @ts-ignore\n                responseNode = getDocument().createDocumentFragment();\n            }\n            return responseNode;\n        }\n\n        function aFullPageResponse(resp) {\n            return resp.match(/<body/);\n        }\n\n        /**\n         *\n         * @param {string} resp\n         * @returns {Element}\n         */\n        function makeFragment(resp) {\n            var partialResponse = !aFullPageResponse(resp);\n            if (htmx.config.useTemplateFragments && partialResponse) {\n                var documentFragment = parseHTML(\"<body><template>\" + resp + \"</template></body>\", 0);\n                // @ts-ignore type mismatch between DocumentFragment and Element.\n                // TODO: Are these close enough for htmx to use interchangeably?\n                return documentFragment.querySelector('template').content;\n            } else {\n                var startTag = getStartTag(resp);\n                switch (startTag) {\n                    case \"thead\":\n                    case \"tbody\":\n                    case \"tfoot\":\n                    case \"colgroup\":\n                    case \"caption\":\n                        return parseHTML(\"<table>\" + resp + \"</table>\", 1);\n                    case \"col\":\n                        return parseHTML(\"<table><colgroup>\" + resp + \"</colgroup></table>\", 2);\n                    case \"tr\":\n                        return parseHTML(\"<table><tbody>\" + resp + \"</tbody></table>\", 2);\n                    case \"td\":\n                    case \"th\":\n                        return parseHTML(\"<table><tbody><tr>\" + resp + \"</tr></tbody></table>\", 3);\n                    case \"script\":\n                        return parseHTML(\"<div>\" + resp + \"</div>\", 1);\n                    default:\n                        return parseHTML(resp, 0);\n                }\n            }\n        }\n\n        /**\n         * @param {Function} func\n         */\n        function maybeCall(func){\n            if(func) {\n                func();\n            }\n        }\n\n        /**\n         * @param {any} o\n         * @param {string} type\n         * @returns\n         */\n        function isType(o, type) {\n            return Object.prototype.toString.call(o) === \"[object \" + type + \"]\";\n        }\n\n        /**\n         * @param {*} o\n         * @returns {o is Function}\n         */\n        function isFunction(o) {\n            return isType(o, \"Function\");\n        }\n\n        /**\n         * @param {*} o\n         * @returns {o is Object}\n         */\n        function isRawObject(o) {\n            return isType(o, \"Object\");\n        }\n\n        /**\n         * getInternalData retrieves \"private\" data stored by htmx within an element\n         * @param {HTMLElement} elt\n         * @returns {*}\n         */\n        function getInternalData(elt) {\n            var dataProp = 'htmx-internal-data';\n            var data = elt[dataProp];\n            if (!data) {\n                data = elt[dataProp] = {};\n            }\n            return data;\n        }\n\n        /**\n         * toArray converts an ArrayLike object into a real array.\n         * @param {ArrayLike} arr\n         * @returns {any[]}\n         */\n        function toArray(arr) {\n            var returnArr = [];\n            if (arr) {\n                for (var i = 0; i < arr.length; i++) {\n                    returnArr.push(arr[i]);\n                }\n            }\n            return returnArr\n        }\n\n        function forEach(arr, func) {\n            if (arr) {\n                for (var i = 0; i < arr.length; i++) {\n                    func(arr[i]);\n                }\n            }\n        }\n\n        function isScrolledIntoView(el) {\n            var rect = el.getBoundingClientRect();\n            var elemTop = rect.top;\n            var elemBottom = rect.bottom;\n            return elemTop < window.innerHeight && elemBottom >= 0;\n        }\n\n        function bodyContains(elt) {\n            // IE Fix\n            if (elt.getRootNode && elt.getRootNode() instanceof window.ShadowRoot) {\n                return getDocument().body.contains(elt.getRootNode().host);\n            } else {\n                return getDocument().body.contains(elt);\n            }\n        }\n\n        function splitOnWhitespace(trigger) {\n            return trigger.trim().split(/\\s+/);\n        }\n\n        /**\n         * mergeObjects takes all of the keys from\n         * obj2 and duplicates them into obj1\n         * @param {Object} obj1\n         * @param {Object} obj2\n         * @returns {Object}\n         */\n        function mergeObjects(obj1, obj2) {\n            for (var key in obj2) {\n                if (obj2.hasOwnProperty(key)) {\n                    obj1[key] = obj2[key];\n                }\n            }\n            return obj1;\n        }\n\n        function parseJSON(jString) {\n            try {\n                return JSON.parse(jString);\n            } catch(error) {\n                logError(error);\n                return null;\n            }\n        }\n\n        function canAccessLocalStorage() {\n            var test = 'htmx:localStorageTest';\n            try {\n                localStorage.setItem(test, test);\n                localStorage.removeItem(test);\n                return true;\n            } catch(e) {\n                return false;\n            }\n        }\n\n        function normalizePath(path) {\n            try {\n                var url = new URL(path);\n                if (url) {\n                    path = url.pathname + url.search;\n                }\n                // remove trailing slash, unless index page\n                if (!path.match('^/$')) {\n                    path = path.replace(/\\/+$/, '');\n                }\n                return path;\n            } catch (e) {\n                // be kind to IE11, which doesn't support URL()\n                return path;\n            }\n        }\n\n        //==========================================================================================\n        // public API\n        //==========================================================================================\n\n        function internalEval(str){\n            return maybeEval(getDocument().body, function () {\n                return eval(str);\n            });\n        }\n\n        function onLoadHelper(callback) {\n            var value = htmx.on(\"htmx:load\", function(evt) {\n                callback(evt.detail.elt);\n            });\n            return value;\n        }\n\n        function logAll(){\n            htmx.logger = function(elt, event, data) {\n                if(console) {\n                    console.log(event, elt, data);\n                }\n            }\n        }\n\n        function logNone() {\n            htmx.logger = null\n        }\n\n        function find(eltOrSelector, selector) {\n            if (selector) {\n                return eltOrSelector.querySelector(selector);\n            } else {\n                return find(getDocument(), eltOrSelector);\n            }\n        }\n\n        function findAll(eltOrSelector, selector) {\n            if (selector) {\n                return eltOrSelector.querySelectorAll(selector);\n            } else {\n                return findAll(getDocument(), eltOrSelector);\n            }\n        }\n\n        function removeElement(elt, delay) {\n            elt = resolveTarget(elt);\n            if (delay) {\n                setTimeout(function(){\n                    removeElement(elt);\n                    elt = null;\n                }, delay);\n            } else {\n                elt.parentElement.removeChild(elt);\n            }\n        }\n\n        function addClassToElement(elt, clazz, delay) {\n            elt = resolveTarget(elt);\n            if (delay) {\n                setTimeout(function(){\n                    addClassToElement(elt, clazz);\n                    elt = null;\n                }, delay);\n            } else {\n                elt.classList && elt.classList.add(clazz);\n            }\n        }\n\n        function removeClassFromElement(elt, clazz, delay) {\n            elt = resolveTarget(elt);\n            if (delay) {\n                setTimeout(function(){\n                    removeClassFromElement(elt, clazz);\n                    elt = null;\n                }, delay);\n            } else {\n                if (elt.classList) {\n                    elt.classList.remove(clazz);\n                    // if there are no classes left, remove the class attribute\n                    if (elt.classList.length === 0) {\n                        elt.removeAttribute(\"class\");\n                    }\n                }\n            }\n        }\n\n        function toggleClassOnElement(elt, clazz) {\n            elt = resolveTarget(elt);\n            elt.classList.toggle(clazz);\n        }\n\n        function takeClassForElement(elt, clazz) {\n            elt = resolveTarget(elt);\n            forEach(elt.parentElement.children, function(child){\n                removeClassFromElement(child, clazz);\n            })\n            addClassToElement(elt, clazz);\n        }\n\n        function closest(elt, selector) {\n            elt = resolveTarget(elt);\n            if (elt.closest) {\n                return elt.closest(selector);\n            } else {\n                // TODO remove when IE goes away\n                do{\n                    if (elt == null || matches(elt, selector)){\n                        return elt;\n                    }\n                }\n                while (elt = elt && parentElt(elt));\n                return null;\n            }\n        }\n\n        function normalizeSelector(selector) {\n            var trimmedSelector = selector.trim();\n            if (trimmedSelector.startsWith(\"<\") && trimmedSelector.endsWith(\"/>\")) {\n                return trimmedSelector.substring(1, trimmedSelector.length - 2);\n            } else {\n                return trimmedSelector;\n            }\n        }\n\n        function querySelectorAllExt(elt, selector) {\n            if (selector.indexOf(\"closest \") === 0) {\n                return [closest(elt, normalizeSelector(selector.substr(8)))];\n            } else if (selector.indexOf(\"find \") === 0) {\n                return [find(elt, normalizeSelector(selector.substr(5)))];\n            } else if (selector.indexOf(\"next \") === 0) {\n                return [scanForwardQuery(elt, normalizeSelector(selector.substr(5)))];\n            } else if (selector.indexOf(\"previous \") === 0) {\n                return [scanBackwardsQuery(elt, normalizeSelector(selector.substr(9)))];\n            } else if (selector === 'document') {\n                return [document];\n            } else if (selector === 'window') {\n                return [window];\n            } else if (selector === 'body') {\n                return [document.body];\n            } else {\n                return getDocument().querySelectorAll(normalizeSelector(selector));\n            }\n        }\n\n        var scanForwardQuery = function(start, match) {\n            var results = getDocument().querySelectorAll(match);\n            for (var i = 0; i < results.length; i++) {\n                var elt = results[i];\n                if (elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_PRECEDING) {\n                    return elt;\n                }\n            }\n        }\n\n        var scanBackwardsQuery = function(start, match) {\n            var results = getDocument().querySelectorAll(match);\n            for (var i = results.length - 1; i >= 0; i--) {\n                var elt = results[i];\n                if (elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_FOLLOWING) {\n                    return elt;\n                }\n            }\n        }\n\n        function querySelectorExt(eltOrSelector, selector) {\n            if (selector) {\n                return querySelectorAllExt(eltOrSelector, selector)[0];\n            } else {\n                return querySelectorAllExt(getDocument().body, eltOrSelector)[0];\n            }\n        }\n\n        function resolveTarget(arg2) {\n            if (isType(arg2, 'String')) {\n                return find(arg2);\n            } else {\n                return arg2;\n            }\n        }\n\n        function processEventArgs(arg1, arg2, arg3) {\n            if (isFunction(arg2)) {\n                return {\n                    target: getDocument().body,\n                    event: arg1,\n                    listener: arg2\n                }\n            } else {\n                return {\n                    target: resolveTarget(arg1),\n                    event: arg2,\n                    listener: arg3\n                }\n            }\n\n        }\n\n        function addEventListenerImpl(arg1, arg2, arg3) {\n            ready(function(){\n                var eventArgs = processEventArgs(arg1, arg2, arg3);\n                eventArgs.target.addEventListener(eventArgs.event, eventArgs.listener);\n            })\n            var b = isFunction(arg2);\n            return b ? arg2 : arg3;\n        }\n\n        function removeEventListenerImpl(arg1, arg2, arg3) {\n            ready(function(){\n                var eventArgs = processEventArgs(arg1, arg2, arg3);\n                eventArgs.target.removeEventListener(eventArgs.event, eventArgs.listener);\n            })\n            return isFunction(arg2) ? arg2 : arg3;\n        }\n\n        //====================================================================\n        // Node processing\n        //====================================================================\n\n        var DUMMY_ELT = getDocument().createElement(\"output\"); // dummy element for bad selectors\n        function findAttributeTargets(elt, attrName) {\n            var attrTarget = getClosestAttributeValue(elt, attrName);\n            if (attrTarget) {\n                if (attrTarget === \"this\") {\n                    return [findThisElement(elt, attrName)];\n                } else {\n                    var result = querySelectorAllExt(elt, attrTarget);\n                    if (result.length === 0) {\n                        logError('The selector \"' + attrTarget + '\" on ' + attrName + \" returned no matches!\");\n                        return [DUMMY_ELT]\n                    } else {\n                        return result;\n                    }\n                }\n            }\n        }\n\n        function findThisElement(elt, attribute){\n            return getClosestMatch(elt, function (elt) {\n                return getAttributeValue(elt, attribute) != null;\n            })\n        }\n\n        function getTarget(elt) {\n            var targetStr = getClosestAttributeValue(elt, \"hx-target\");\n            if (targetStr) {\n                if (targetStr === \"this\") {\n                    return findThisElement(elt,'hx-target');\n                } else {\n                    return querySelectorExt(elt, targetStr)\n                }\n            } else {\n                var data = getInternalData(elt);\n                if (data.boosted) {\n                    return getDocument().body;\n                } else {\n                    return elt;\n                }\n            }\n        }\n\n        function shouldSettleAttribute(name) {\n            var attributesToSettle = htmx.config.attributesToSettle;\n            for (var i = 0; i < attributesToSettle.length; i++) {\n                if (name === attributesToSettle[i]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function cloneAttributes(mergeTo, mergeFrom) {\n            forEach(mergeTo.attributes, function (attr) {\n                if (!mergeFrom.hasAttribute(attr.name) && shouldSettleAttribute(attr.name)) {\n                    mergeTo.removeAttribute(attr.name)\n                }\n            });\n            forEach(mergeFrom.attributes, function (attr) {\n                if (shouldSettleAttribute(attr.name)) {\n                    mergeTo.setAttribute(attr.name, attr.value);\n                }\n            });\n        }\n\n        function isInlineSwap(swapStyle, target) {\n            var extensions = getExtensions(target);\n            for (var i = 0; i < extensions.length; i++) {\n                var extension = extensions[i];\n                try {\n                    if (extension.isInlineSwap(swapStyle)) {\n                        return true;\n                    }\n                } catch(e) {\n                    logError(e);\n                }\n            }\n            return swapStyle === \"outerHTML\";\n        }\n\n        /**\n         *\n         * @param {string} oobValue\n         * @param {HTMLElement} oobElement\n         * @param {*} settleInfo\n         * @returns\n         */\n        function oobSwap(oobValue, oobElement, settleInfo) {\n            var selector = \"#\" + getRawAttribute(oobElement, \"id\");\n            var swapStyle = \"outerHTML\";\n            if (oobValue === \"true\") {\n                // do nothing\n            } else if (oobValue.indexOf(\":\") > 0) {\n                swapStyle = oobValue.substr(0, oobValue.indexOf(\":\"));\n                selector  = oobValue.substr(oobValue.indexOf(\":\") + 1, oobValue.length);\n            } else {\n                swapStyle = oobValue;\n            }\n\n            var targets = getDocument().querySelectorAll(selector);\n            if (targets) {\n                forEach(\n                    targets,\n                    function (target) {\n                        var fragment;\n                        var oobElementClone = oobElement.cloneNode(true);\n                        fragment = getDocument().createDocumentFragment();\n                        fragment.appendChild(oobElementClone);\n                        if (!isInlineSwap(swapStyle, target)) {\n                            fragment = oobElementClone; // if this is not an inline swap, we use the content of the node, not the node itself\n                        }\n\n                        var beforeSwapDetails = {shouldSwap: true, target: target, fragment:fragment };\n                        if (!triggerEvent(target, 'htmx:oobBeforeSwap', beforeSwapDetails)) return;\n\n                        target = beforeSwapDetails.target; // allow re-targeting\n                        if (beforeSwapDetails['shouldSwap']){\n                            swap(swapStyle, target, target, fragment, settleInfo);\n                        }\n                        forEach(settleInfo.elts, function (elt) {\n                            triggerEvent(elt, 'htmx:oobAfterSwap', beforeSwapDetails);\n                        });\n                    }\n                );\n                oobElement.parentNode.removeChild(oobElement);\n            } else {\n                oobElement.parentNode.removeChild(oobElement);\n                triggerErrorEvent(getDocument().body, \"htmx:oobErrorNoTarget\", {content: oobElement});\n            }\n            return oobValue;\n        }\n\n        function handleOutOfBandSwaps(elt, fragment, settleInfo) {\n            var oobSelects = getClosestAttributeValue(elt, \"hx-select-oob\");\n            if (oobSelects) {\n                var oobSelectValues = oobSelects.split(\",\");\n                for (let i = 0; i < oobSelectValues.length; i++) {\n                    var oobSelectValue = oobSelectValues[i].split(\":\", 2);\n                    var id = oobSelectValue[0].trim();\n                    if (id.indexOf(\"#\") === 0) {\n                        id = id.substring(1);\n                    }\n                    var oobValue = oobSelectValue[1] || \"true\";\n                    var oobElement = fragment.querySelector(\"#\" + id);\n                    if (oobElement) {\n                        oobSwap(oobValue, oobElement, settleInfo);\n                    }\n                }\n            }\n            forEach(findAll(fragment, '[hx-swap-oob], [data-hx-swap-oob]'), function (oobElement) {\n                var oobValue = getAttributeValue(oobElement, \"hx-swap-oob\");\n                if (oobValue != null) {\n                    oobSwap(oobValue, oobElement, settleInfo);\n                }\n            });\n        }\n\n        function handlePreservedElements(fragment) {\n            forEach(findAll(fragment, '[hx-preserve], [data-hx-preserve]'), function (preservedElt) {\n                var id = getAttributeValue(preservedElt, \"id\");\n                var oldElt = getDocument().getElementById(id);\n                if (oldElt != null) {\n                    preservedElt.parentNode.replaceChild(oldElt, preservedElt);\n                }\n            });\n        }\n\n        function handleAttributes(parentNode, fragment, settleInfo) {\n            forEach(fragment.querySelectorAll(\"[id]\"), function (newNode) {\n                var id = getRawAttribute(newNode, \"id\")\n                if (id && id.length > 0) {\n                    var normalizedId = id.replace(\"'\", \"\\\\'\");\n                    var normalizedTag = newNode.tagName.replace(':', '\\\\:');\n                    var oldNode = parentNode.querySelector(normalizedTag + \"[id='\" + normalizedId + \"']\");\n                    if (oldNode && oldNode !== parentNode) {\n                        var newAttributes = newNode.cloneNode();\n                        cloneAttributes(newNode, oldNode);\n                        settleInfo.tasks.push(function () {\n                            cloneAttributes(newNode, newAttributes);\n                        });\n                    }\n                }\n            });\n        }\n\n        function makeAjaxLoadTask(child) {\n            return function () {\n                removeClassFromElement(child, htmx.config.addedClass);\n                processNode(child);\n                processScripts(child);\n                processFocus(child)\n                triggerEvent(child, 'htmx:load');\n            };\n        }\n\n        function processFocus(child) {\n            var autofocus = \"[autofocus]\";\n            var autoFocusedElt = matches(child, autofocus) ? child : child.querySelector(autofocus)\n            if (autoFocusedElt != null) {\n                autoFocusedElt.focus();\n            }\n        }\n\n        function insertNodesBefore(parentNode, insertBefore, fragment, settleInfo) {\n            handleAttributes(parentNode, fragment, settleInfo);\n            while(fragment.childNodes.length > 0){\n                var child = fragment.firstChild;\n                addClassToElement(child, htmx.config.addedClass);\n                parentNode.insertBefore(child, insertBefore);\n                if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) {\n                    settleInfo.tasks.push(makeAjaxLoadTask(child));\n                }\n            }\n        }\n\n        // based on https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0,\n        // derived from Java's string hashcode implementation\n        function stringHash(string, hash) {\n            var char = 0;\n            while (char < string.length){\n                hash = (hash << 5) - hash + string.charCodeAt(char++) | 0; // bitwise or ensures we have a 32-bit int\n            }\n            return hash;\n        }\n\n        function attributeHash(elt) {\n            var hash = 0;\n            // IE fix\n            if (elt.attributes) {\n                for (var i = 0; i < elt.attributes.length; i++) {\n                    var attribute = elt.attributes[i];\n                    if(attribute.value){ // only include attributes w/ actual values (empty is same as non-existent)\n                        hash = stringHash(attribute.name, hash);\n                        hash = stringHash(attribute.value, hash);\n                    }\n                }\n            }\n            return hash;\n        }\n\n        function deInitOnHandlers(elt) {\n            var internalData = getInternalData(elt);\n            if (internalData.onHandlers) {\n                for (let i = 0; i < internalData.onHandlers.length; i++) {\n                    const handlerInfo = internalData.onHandlers[i];\n                    elt.removeEventListener(handlerInfo.event, handlerInfo.listener);\n                }\n                delete internalData.onHandlers\n            }\n        }\n\n        function deInitNode(element) {\n            var internalData = getInternalData(element);\n            if (internalData.timeout) {\n                clearTimeout(internalData.timeout);\n            }\n            if (internalData.webSocket) {\n                internalData.webSocket.close();\n            }\n            if (internalData.sseEventSource) {\n                internalData.sseEventSource.close();\n            }\n            if (internalData.listenerInfos) {\n                forEach(internalData.listenerInfos, function (info) {\n                    if (info.on) {\n                        info.on.removeEventListener(info.trigger, info.listener);\n                    }\n                });\n            }\n            if (internalData.initHash) {\n                internalData.initHash = null\n            }\n            deInitOnHandlers(element);\n        }\n\n        function cleanUpElement(element) {\n            triggerEvent(element, \"htmx:beforeCleanupElement\")\n            deInitNode(element);\n            if (element.children) { // IE\n                forEach(element.children, function(child) { cleanUpElement(child) });\n            }\n        }\n\n        function swapOuterHTML(target, fragment, settleInfo) {\n            if (target.tagName === \"BODY\") {\n                return swapInnerHTML(target, fragment, settleInfo);\n            } else {\n                // @type {HTMLElement}\n                var newElt\n                var eltBeforeNewContent = target.previousSibling;\n                insertNodesBefore(parentElt(target), target, fragment, settleInfo);\n                if (eltBeforeNewContent == null) {\n                    newElt = parentElt(target).firstChild;\n                } else {\n                    newElt = eltBeforeNewContent.nextSibling;\n                }\n                getInternalData(target).replacedWith = newElt; // tuck away so we can fire events on it later\n                settleInfo.elts = settleInfo.elts.filter(function(e) { return e != target });\n                while(newElt && newElt !== target) {\n                    if (newElt.nodeType === Node.ELEMENT_NODE) {\n                        settleInfo.elts.push(newElt);\n                    }\n                    newElt = newElt.nextElementSibling;\n                }\n                cleanUpElement(target);\n                parentElt(target).removeChild(target);\n            }\n        }\n\n        function swapAfterBegin(target, fragment, settleInfo) {\n            return insertNodesBefore(target, target.firstChild, fragment, settleInfo);\n        }\n\n        function swapBeforeBegin(target, fragment, settleInfo) {\n            return insertNodesBefore(parentElt(target), target, fragment, settleInfo);\n        }\n\n        function swapBeforeEnd(target, fragment, settleInfo) {\n            return insertNodesBefore(target, null, fragment, settleInfo);\n        }\n\n        function swapAfterEnd(target, fragment, settleInfo) {\n            return insertNodesBefore(parentElt(target), target.nextSibling, fragment, settleInfo);\n        }\n        function swapDelete(target, fragment, settleInfo) {\n            cleanUpElement(target);\n            return parentElt(target).removeChild(target);\n        }\n\n        function swapInnerHTML(target, fragment, settleInfo) {\n            var firstChild = target.firstChild;\n            insertNodesBefore(target, firstChild, fragment, settleInfo);\n            if (firstChild) {\n                while (firstChild.nextSibling) {\n                    cleanUpElement(firstChild.nextSibling)\n                    target.removeChild(firstChild.nextSibling);\n                }\n                cleanUpElement(firstChild)\n                target.removeChild(firstChild);\n            }\n        }\n\n        function maybeSelectFromResponse(elt, fragment, selectOverride) {\n            var selector = selectOverride || getClosestAttributeValue(elt, \"hx-select\");\n            if (selector) {\n                var newFragment = getDocument().createDocumentFragment();\n                forEach(fragment.querySelectorAll(selector), function (node) {\n                    newFragment.appendChild(node);\n                });\n                fragment = newFragment;\n            }\n            return fragment;\n        }\n\n        function swap(swapStyle, elt, target, fragment, settleInfo) {\n            switch (swapStyle) {\n                case \"none\":\n                    return;\n                case \"outerHTML\":\n                    swapOuterHTML(target, fragment, settleInfo);\n                    return;\n                case \"afterbegin\":\n                    swapAfterBegin(target, fragment, settleInfo);\n                    return;\n                case \"beforebegin\":\n                    swapBeforeBegin(target, fragment, settleInfo);\n                    return;\n                case \"beforeend\":\n                    swapBeforeEnd(target, fragment, settleInfo);\n                    return;\n                case \"afterend\":\n                    swapAfterEnd(target, fragment, settleInfo);\n                    return;\n                case \"delete\":\n                    swapDelete(target, fragment, settleInfo);\n                    return;\n                default:\n                    var extensions = getExtensions(elt);\n                    for (var i = 0; i < extensions.length; i++) {\n                        var ext = extensions[i];\n                        try {\n                            var newElements = ext.handleSwap(swapStyle, target, fragment, settleInfo);\n                            if (newElements) {\n                                if (typeof newElements.length !== 'undefined') {\n                                    // if handleSwap returns an array (like) of elements, we handle them\n                                    for (var j = 0; j < newElements.length; j++) {\n                                        var child = newElements[j];\n                                        if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) {\n                                            settleInfo.tasks.push(makeAjaxLoadTask(child));\n                                        }\n                                    }\n                                }\n                                return;\n                            }\n                        } catch (e) {\n                            logError(e);\n                        }\n                    }\n                    if (swapStyle === \"innerHTML\") {\n                        swapInnerHTML(target, fragment, settleInfo);\n                    } else {\n                        swap(htmx.config.defaultSwapStyle, elt, target, fragment, settleInfo);\n                    }\n            }\n        }\n\n        function findTitle(content) {\n            if (content.indexOf('<title') > -1) {\n                var contentWithSvgsRemoved = content.replace(/<svg(\\s[^>]*>|>)([\\s\\S]*?)<\\/svg>/gim, '');\n                var result = contentWithSvgsRemoved.match(/<title(\\s[^>]*>|>)([\\s\\S]*?)<\\/title>/im);\n\n                if (result) {\n                    return result[2];\n                }\n            }\n        }\n\n        function selectAndSwap(swapStyle, target, elt, responseText, settleInfo, selectOverride) {\n            settleInfo.title = findTitle(responseText);\n            var fragment = makeFragment(responseText);\n            if (fragment) {\n                handleOutOfBandSwaps(elt, fragment, settleInfo);\n                fragment = maybeSelectFromResponse(elt, fragment, selectOverride);\n                handlePreservedElements(fragment);\n                return swap(swapStyle, elt, target, fragment, settleInfo);\n            }\n        }\n\n        function handleTrigger(xhr, header, elt) {\n            var triggerBody = xhr.getResponseHeader(header);\n            if (triggerBody.indexOf(\"{\") === 0) {\n                var triggers = parseJSON(triggerBody);\n                for (var eventName in triggers) {\n                    if (triggers.hasOwnProperty(eventName)) {\n                        var detail = triggers[eventName];\n                        if (!isRawObject(detail)) {\n                            detail = {\"value\": detail}\n                        }\n                        triggerEvent(elt, eventName, detail);\n                    }\n                }\n            } else {\n                var eventNames = triggerBody.split(\",\")\n                for (var i = 0; i < eventNames.length; i++) {\n                    triggerEvent(elt, eventNames[i].trim(), []);\n                }\n            }\n        }\n\n        var WHITESPACE = /\\s/;\n        var WHITESPACE_OR_COMMA = /[\\s,]/;\n        var SYMBOL_START = /[_$a-zA-Z]/;\n        var SYMBOL_CONT = /[_$a-zA-Z0-9]/;\n        var STRINGISH_START = ['\"', \"'\", \"/\"];\n        var NOT_WHITESPACE = /[^\\s]/;\n        function tokenizeString(str) {\n            var tokens = [];\n            var position = 0;\n            while (position < str.length) {\n                if(SYMBOL_START.exec(str.charAt(position))) {\n                    var startPosition = position;\n                    while (SYMBOL_CONT.exec(str.charAt(position + 1))) {\n                        position++;\n                    }\n                    tokens.push(str.substr(startPosition, position - startPosition + 1));\n                } else if (STRINGISH_START.indexOf(str.charAt(position)) !== -1) {\n                    var startChar = str.charAt(position);\n                    var startPosition = position;\n                    position++;\n                    while (position < str.length && str.charAt(position) !== startChar ) {\n                        if (str.charAt(position) === \"\\\\\") {\n                            position++;\n                        }\n                        position++;\n                    }\n                    tokens.push(str.substr(startPosition, position - startPosition + 1));\n                } else {\n                    var symbol = str.charAt(position);\n                    tokens.push(symbol);\n                }\n                position++;\n            }\n            return tokens;\n        }\n\n        function isPossibleRelativeReference(token, last, paramName) {\n            return SYMBOL_START.exec(token.charAt(0)) &&\n                token !== \"true\" &&\n                token !== \"false\" &&\n                token !== \"this\" &&\n                token !== paramName &&\n                last !== \".\";\n        }\n\n        function maybeGenerateConditional(elt, tokens, paramName) {\n            if (tokens[0] === '[') {\n                tokens.shift();\n                var bracketCount = 1;\n                var conditionalSource = \" return (function(\" + paramName + \"){ return (\";\n                var last = null;\n                while (tokens.length > 0) {\n                    var token = tokens[0];\n                    if (token === \"]\") {\n                        bracketCount--;\n                        if (bracketCount === 0) {\n                            if (last === null) {\n                                conditionalSource = conditionalSource + \"true\";\n                            }\n                            tokens.shift();\n                            conditionalSource += \")})\";\n                            try {\n                                var conditionFunction = maybeEval(elt,function () {\n                                    return Function(conditionalSource)();\n                                    },\n                                    function(){return true})\n                                conditionFunction.source = conditionalSource;\n                                return conditionFunction;\n                            } catch (e) {\n                                triggerErrorEvent(getDocument().body, \"htmx:syntax:error\", {error:e, source:conditionalSource})\n                                return null;\n                            }\n                        }\n                    } else if (token === \"[\") {\n                        bracketCount++;\n                    }\n                    if (isPossibleRelativeReference(token, last, paramName)) {\n                            conditionalSource += \"((\" + paramName + \".\" + token + \") ? (\" + paramName + \".\" + token + \") : (window.\" + token + \"))\";\n                    } else {\n                        conditionalSource = conditionalSource + token;\n                    }\n                    last = tokens.shift();\n                }\n            }\n        }\n\n        function consumeUntil(tokens, match) {\n            var result = \"\";\n            while (tokens.length > 0 && !tokens[0].match(match)) {\n                result += tokens.shift();\n            }\n            return result;\n        }\n\n        var INPUT_SELECTOR = 'input, textarea, select';\n\n        /**\n         * @param {HTMLElement} elt\n         * @returns {import(\"./htmx\").HtmxTriggerSpecification[]}\n         */\n        function getTriggerSpecs(elt) {\n            var explicitTrigger = getAttributeValue(elt, 'hx-trigger');\n            var triggerSpecs = [];\n            if (explicitTrigger) {\n                var tokens = tokenizeString(explicitTrigger);\n                do {\n                    consumeUntil(tokens, NOT_WHITESPACE);\n                    var initialLength = tokens.length;\n                    var trigger = consumeUntil(tokens, /[,\\[\\s]/);\n                    if (trigger !== \"\") {\n                        if (trigger === \"every\") {\n                            var every = {trigger: 'every'};\n                            consumeUntil(tokens, NOT_WHITESPACE);\n                            every.pollInterval = parseInterval(consumeUntil(tokens, /[,\\[\\s]/));\n                            consumeUntil(tokens, NOT_WHITESPACE);\n                            var eventFilter = maybeGenerateConditional(elt, tokens, \"event\");\n                            if (eventFilter) {\n                                every.eventFilter = eventFilter;\n                            }\n                            triggerSpecs.push(every);\n                        } else if (trigger.indexOf(\"sse:\") === 0) {\n                            triggerSpecs.push({trigger: 'sse', sseEvent: trigger.substr(4)});\n                        } else {\n                            var triggerSpec = {trigger: trigger};\n                            var eventFilter = maybeGenerateConditional(elt, tokens, \"event\");\n                            if (eventFilter) {\n                                triggerSpec.eventFilter = eventFilter;\n                            }\n                            while (tokens.length > 0 && tokens[0] !== \",\") {\n                                consumeUntil(tokens, NOT_WHITESPACE)\n                                var token = tokens.shift();\n                                if (token === \"changed\") {\n                                    triggerSpec.changed = true;\n                                } else if (token === \"once\") {\n                                    triggerSpec.once = true;\n                                } else if (token === \"consume\") {\n                                    triggerSpec.consume = true;\n                                } else if (token === \"delay\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.delay = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA));\n                                } else if (token === \"from\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    var from_arg = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                    if (from_arg === \"closest\" || from_arg === \"find\" || from_arg === \"next\" || from_arg === \"previous\") {\n                                        tokens.shift();\n                                        from_arg +=\n                                            \" \" +\n                                            consumeUntil(\n                                                tokens,\n                                                WHITESPACE_OR_COMMA\n                                            );\n                                    }\n                                    triggerSpec.from = from_arg;\n                                } else if (token === \"target\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.target = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                } else if (token === \"throttle\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.throttle = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA));\n                                } else if (token === \"queue\" && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec.queue = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                } else if ((token === \"root\" || token === \"threshold\") && tokens[0] === \":\") {\n                                    tokens.shift();\n                                    triggerSpec[token] = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                } else {\n                                    triggerErrorEvent(elt, \"htmx:syntax:error\", {token:tokens.shift()});\n                                }\n                            }\n                            triggerSpecs.push(triggerSpec);\n                        }\n                    }\n                    if (tokens.length === initialLength) {\n                        triggerErrorEvent(elt, \"htmx:syntax:error\", {token:tokens.shift()});\n                    }\n                    consumeUntil(tokens, NOT_WHITESPACE);\n                } while (tokens[0] === \",\" && tokens.shift())\n            }\n\n            if (triggerSpecs.length > 0) {\n                return triggerSpecs;\n            } else if (matches(elt, 'form')) {\n                return [{trigger: 'submit'}];\n            } else if (matches(elt, 'input[type=\"button\"], input[type=\"submit\"]')){\n                return [{trigger: 'click'}];\n            } else if (matches(elt, INPUT_SELECTOR)) {\n                return [{trigger: 'change'}];\n            } else {\n                return [{trigger: 'click'}];\n            }\n        }\n\n        function cancelPolling(elt) {\n            getInternalData(elt).cancelled = true;\n        }\n\n        function processPolling(elt, handler, spec) {\n            var nodeData = getInternalData(elt);\n            nodeData.timeout = setTimeout(function () {\n                if (bodyContains(elt) && nodeData.cancelled !== true) {\n                    if (!maybeFilterEvent(spec, elt, makeEvent('hx:poll:trigger', {\n                        triggerSpec: spec,\n                        target: elt\n                    }))) {\n                        handler(elt);\n                    }\n                    processPolling(elt, handler, spec);\n                }\n            }, spec.pollInterval);\n        }\n\n        function isLocalLink(elt) {\n            return location.hostname === elt.hostname &&\n                getRawAttribute(elt,'href') &&\n                getRawAttribute(elt,'href').indexOf(\"#\") !== 0;\n        }\n\n        function boostElement(elt, nodeData, triggerSpecs) {\n            if ((elt.tagName === \"A\" && isLocalLink(elt) && (elt.target === \"\" || elt.target === \"_self\")) || elt.tagName === \"FORM\") {\n                nodeData.boosted = true;\n                var verb, path;\n                if (elt.tagName === \"A\") {\n                    verb = \"get\";\n                    path = elt.href; // DOM property gives the fully resolved href of a relative link\n                } else {\n                    var rawAttribute = getRawAttribute(elt, \"method\");\n                    verb = rawAttribute ? rawAttribute.toLowerCase() : \"get\";\n                    if (verb === \"get\") {\n                    }\n                    path = getRawAttribute(elt, 'action');\n                }\n                triggerSpecs.forEach(function(triggerSpec) {\n                    addEventListener(elt, function(elt, evt) {\n                        if (closest(elt, htmx.config.disableSelector)) {\n                            cleanUpElement(elt)\n                            return\n                        }\n                        issueAjaxRequest(verb, path, elt, evt)\n                    }, nodeData, triggerSpec, true);\n                });\n            }\n        }\n\n        /**\n         *\n         * @param {Event} evt\n         * @param {HTMLElement} elt\n         * @returns\n         */\n        function shouldCancel(evt, elt) {\n            if (evt.type === \"submit\" || evt.type === \"click\") {\n                if (elt.tagName === \"FORM\") {\n                    return true;\n                }\n                if (matches(elt, 'input[type=\"submit\"], button') && closest(elt, 'form') !== null) {\n                    return true;\n                }\n                if (elt.tagName === \"A\" && elt.href &&\n                    (elt.getAttribute('href') === '#' || elt.getAttribute('href').indexOf(\"#\") !== 0)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function ignoreBoostedAnchorCtrlClick(elt, evt) {\n            return getInternalData(elt).boosted && elt.tagName === \"A\" && evt.type === \"click\" && (evt.ctrlKey || evt.metaKey);\n        }\n\n        function maybeFilterEvent(triggerSpec, elt, evt) {\n            var eventFilter = triggerSpec.eventFilter;\n            if(eventFilter){\n                try {\n                    return eventFilter.call(elt, evt) !== true;\n                } catch(e) {\n                    triggerErrorEvent(getDocument().body, \"htmx:eventFilter:error\", {error: e, source:eventFilter.source});\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function addEventListener(elt, handler, nodeData, triggerSpec, explicitCancel) {\n            var elementData = getInternalData(elt);\n            var eltsToListenOn;\n            if (triggerSpec.from) {\n                eltsToListenOn = querySelectorAllExt(elt, triggerSpec.from);\n            } else {\n                eltsToListenOn = [elt];\n            }\n            // store the initial values of the elements, so we can tell if they change\n            if (triggerSpec.changed) {\n                eltsToListenOn.forEach(function (eltToListenOn) {\n                    var eltToListenOnData = getInternalData(eltToListenOn);\n                    eltToListenOnData.lastValue = eltToListenOn.value;\n                })\n            }\n            forEach(eltsToListenOn, function (eltToListenOn) {\n                var eventListener = function (evt) {\n                    if (!bodyContains(elt)) {\n                        eltToListenOn.removeEventListener(triggerSpec.trigger, eventListener);\n                        return;\n                    }\n                    if (ignoreBoostedAnchorCtrlClick(elt, evt)) {\n                        return;\n                    }\n                    if (explicitCancel || shouldCancel(evt, elt)) {\n                        evt.preventDefault();\n                    }\n                    if (maybeFilterEvent(triggerSpec, elt, evt)) {\n                        return;\n                    }\n                    var eventData = getInternalData(evt);\n                    eventData.triggerSpec = triggerSpec;\n                    if (eventData.handledFor == null) {\n                        eventData.handledFor = [];\n                    }\n                    if (eventData.handledFor.indexOf(elt) < 0) {\n                        eventData.handledFor.push(elt);\n                        if (triggerSpec.consume) {\n                            evt.stopPropagation();\n                        }\n                        if (triggerSpec.target && evt.target) {\n                            if (!matches(evt.target, triggerSpec.target)) {\n                                return;\n                            }\n                        }\n                        if (triggerSpec.once) {\n                            if (elementData.triggeredOnce) {\n                                return;\n                            } else {\n                                elementData.triggeredOnce = true;\n                            }\n                        }\n                        if (triggerSpec.changed) {\n                            var eltToListenOnData = getInternalData(eltToListenOn)\n                            if (eltToListenOnData.lastValue === eltToListenOn.value) {\n                                return;\n                            }\n                            eltToListenOnData.lastValue = eltToListenOn.value\n                        }\n                        if (elementData.delayed) {\n                            clearTimeout(elementData.delayed);\n                        }\n                        if (elementData.throttle) {\n                            return;\n                        }\n\n                        if (triggerSpec.throttle) {\n                            if (!elementData.throttle) {\n                                handler(elt, evt);\n                                elementData.throttle = setTimeout(function () {\n                                    elementData.throttle = null;\n                                }, triggerSpec.throttle);\n                            }\n                        } else if (triggerSpec.delay) {\n                            elementData.delayed = setTimeout(function() { handler(elt, evt) }, triggerSpec.delay);\n                        } else {\n                            triggerEvent(elt, 'htmx:trigger')\n                            handler(elt, evt);\n                        }\n                    }\n                };\n                if (nodeData.listenerInfos == null) {\n                    nodeData.listenerInfos = [];\n                }\n                nodeData.listenerInfos.push({\n                    trigger: triggerSpec.trigger,\n                    listener: eventListener,\n                    on: eltToListenOn\n                })\n                eltToListenOn.addEventListener(triggerSpec.trigger, eventListener);\n            });\n        }\n\n        var windowIsScrolling = false // used by initScrollHandler\n        var scrollHandler = null;\n        function initScrollHandler() {\n            if (!scrollHandler) {\n                scrollHandler = function() {\n                    windowIsScrolling = true\n                };\n                window.addEventListener(\"scroll\", scrollHandler)\n                setInterval(function() {\n                    if (windowIsScrolling) {\n                        windowIsScrolling = false;\n                        forEach(getDocument().querySelectorAll(\"[hx-trigger='revealed'],[data-hx-trigger='revealed']\"), function (elt) {\n                            maybeReveal(elt);\n                        })\n                    }\n                }, 200);\n            }\n        }\n\n        function maybeReveal(elt) {\n            if (!hasAttribute(elt,'data-hx-revealed') && isScrolledIntoView(elt)) {\n                elt.setAttribute('data-hx-revealed', 'true');\n                var nodeData = getInternalData(elt);\n                if (nodeData.initHash) {\n                    triggerEvent(elt, 'revealed');\n                } else {\n                    // if the node isn't initialized, wait for it before triggering the request\n                    elt.addEventListener(\"htmx:afterProcessNode\", function(evt) { triggerEvent(elt, 'revealed') }, {once: true});\n                }\n            }\n        }\n\n        //====================================================================\n        // Web Sockets\n        //====================================================================\n\n        function processWebSocketInfo(elt, nodeData, info) {\n            var values = splitOnWhitespace(info);\n            for (var i = 0; i < values.length; i++) {\n                var value = values[i].split(/:(.+)/);\n                if (value[0] === \"connect\") {\n                    ensureWebSocket(elt, value[1], 0);\n                }\n                if (value[0] === \"send\") {\n                    processWebSocketSend(elt);\n                }\n            }\n        }\n\n        function ensureWebSocket(elt, wssSource, retryCount) {\n            if (!bodyContains(elt)) {\n                return;  // stop ensuring websocket connection when socket bearing element ceases to exist\n            }\n\n            if (wssSource.indexOf(\"/\") == 0) {  // complete absolute paths only\n                var base_part = location.hostname + (location.port ? ':'+location.port: '');\n                if (location.protocol == 'https:') {\n                    wssSource = \"wss://\" + base_part + wssSource;\n                } else if (location.protocol == 'http:') {\n                    wssSource = \"ws://\" + base_part + wssSource;\n                }\n            }\n            var socket = htmx.createWebSocket(wssSource);\n            socket.onerror = function (e) {\n                triggerErrorEvent(elt, \"htmx:wsError\", {error:e, socket:socket});\n                maybeCloseWebSocketSource(elt);\n            };\n\n            socket.onclose = function (e) {\n                if ([1006, 1012, 1013].indexOf(e.code) >= 0) {  // Abnormal Closure/Service Restart/Try Again Later\n                    var delay = getWebSocketReconnectDelay(retryCount);\n                    setTimeout(function() {\n                        ensureWebSocket(elt, wssSource, retryCount+1);  // creates a websocket with a new timeout\n                    }, delay);\n                }\n            };\n            socket.onopen = function (e) {\n                retryCount = 0;\n            }\n\n            getInternalData(elt).webSocket = socket;\n            socket.addEventListener('message', function (event) {\n                if (maybeCloseWebSocketSource(elt)) {\n                    return;\n                }\n\n                var response = event.data;\n                withExtensions(elt, function(extension){\n                    response = extension.transformResponse(response, null, elt);\n                });\n\n                var settleInfo = makeSettleInfo(elt);\n                var fragment = makeFragment(response);\n                var children = toArray(fragment.children);\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n                    oobSwap(getAttributeValue(child, \"hx-swap-oob\") || \"true\", child, settleInfo);\n                }\n\n                settleImmediately(settleInfo.tasks);\n            });\n        }\n\n        function maybeCloseWebSocketSource(elt) {\n            if (!bodyContains(elt)) {\n                getInternalData(elt).webSocket.close();\n                return true;\n            }\n        }\n\n        function processWebSocketSend(elt) {\n            var webSocketSourceElt = getClosestMatch(elt, function (parent) {\n                return getInternalData(parent).webSocket != null;\n            });\n            if (webSocketSourceElt) {\n                elt.addEventListener(getTriggerSpecs(elt)[0].trigger, function (evt) {\n                    var webSocket = getInternalData(webSocketSourceElt).webSocket;\n                    var headers = getHeaders(elt, webSocketSourceElt);\n                    var results = getInputValues(elt, 'post');\n                    var errors = results.errors;\n                    var rawParameters = results.values;\n                    var expressionVars = getExpressionVars(elt);\n                    var allParameters = mergeObjects(rawParameters, expressionVars);\n                    var filteredParameters = filterValues(allParameters, elt);\n                    filteredParameters['HEADERS'] = headers;\n                    if (errors && errors.length > 0) {\n                        triggerEvent(elt, 'htmx:validation:halted', errors);\n                        return;\n                    }\n                    webSocket.send(JSON.stringify(filteredParameters));\n                    if(shouldCancel(evt, elt)){\n                        evt.preventDefault();\n                    }\n                });\n            } else {\n                triggerErrorEvent(elt, \"htmx:noWebSocketSourceError\");\n            }\n        }\n\n        function getWebSocketReconnectDelay(retryCount) {\n            var delay = htmx.config.wsReconnectDelay;\n            if (typeof delay === 'function') {\n                // @ts-ignore\n                return delay(retryCount);\n            }\n            if (delay === 'full-jitter') {\n                var exp = Math.min(retryCount, 6);\n                var maxDelay = 1000 * Math.pow(2, exp);\n                return maxDelay * Math.random();\n            }\n            logError('htmx.config.wsReconnectDelay must either be a function or the string \"full-jitter\"');\n        }\n\n        //====================================================================\n        // Server Sent Events\n        //====================================================================\n\n        function processSSEInfo(elt, nodeData, info) {\n            var values = splitOnWhitespace(info);\n            for (var i = 0; i < values.length; i++) {\n                var value = values[i].split(/:(.+)/);\n                if (value[0] === \"connect\") {\n                    processSSESource(elt, value[1]);\n                }\n\n                if ((value[0] === \"swap\")) {\n                    processSSESwap(elt, value[1])\n                }\n            }\n        }\n\n        function processSSESource(elt, sseSrc) {\n            var source = htmx.createEventSource(sseSrc);\n            source.onerror = function (e) {\n                triggerErrorEvent(elt, \"htmx:sseError\", {error:e, source:source});\n                maybeCloseSSESource(elt);\n            };\n            getInternalData(elt).sseEventSource = source;\n        }\n\n        function processSSESwap(elt, sseEventName) {\n            var sseSourceElt = getClosestMatch(elt, hasEventSource);\n            if (sseSourceElt) {\n                var sseEventSource = getInternalData(sseSourceElt).sseEventSource;\n                var sseListener = function (event) {\n                    if (maybeCloseSSESource(sseSourceElt)) {\n                        return;\n                    }\n                    if (!bodyContains(elt)) {\n                        sseEventSource.removeEventListener(sseEventName, sseListener);\n                        return;\n                    }\n\n                    ///////////////////////////\n                    // TODO: merge this code with AJAX and WebSockets code in the future.\n\n                    var response = event.data;\n                    withExtensions(elt, function(extension){\n                        response = extension.transformResponse(response, null, elt);\n                    });\n\n                    var swapSpec = getSwapSpecification(elt)\n                    var target = getTarget(elt)\n                    var settleInfo = makeSettleInfo(elt);\n\n                    selectAndSwap(swapSpec.swapStyle, target, elt, response, settleInfo)\n                    settleImmediately(settleInfo.tasks)\n                    triggerEvent(elt, \"htmx:sseMessage\", event)\n                };\n\n                getInternalData(elt).sseListener = sseListener;\n                sseEventSource.addEventListener(sseEventName, sseListener);\n            } else {\n                triggerErrorEvent(elt, \"htmx:noSSESourceError\");\n            }\n        }\n\n        function processSSETrigger(elt, handler, sseEventName) {\n            var sseSourceElt = getClosestMatch(elt, hasEventSource);\n            if (sseSourceElt) {\n                var sseEventSource = getInternalData(sseSourceElt).sseEventSource;\n                var sseListener = function () {\n                    if (!maybeCloseSSESource(sseSourceElt)) {\n                        if (bodyContains(elt)) {\n                            handler(elt);\n                        } else {\n                            sseEventSource.removeEventListener(sseEventName, sseListener);\n                        }\n                    }\n                };\n                getInternalData(elt).sseListener = sseListener;\n                sseEventSource.addEventListener(sseEventName, sseListener);\n            } else {\n                triggerErrorEvent(elt, \"htmx:noSSESourceError\");\n            }\n        }\n\n        function maybeCloseSSESource(elt) {\n            if (!bodyContains(elt)) {\n                getInternalData(elt).sseEventSource.close();\n                return true;\n            }\n        }\n\n        function hasEventSource(node) {\n            return getInternalData(node).sseEventSource != null;\n        }\n\n        //====================================================================\n\n        function loadImmediately(elt, handler, nodeData, delay) {\n            var load = function(){\n                if (!nodeData.loaded) {\n                    nodeData.loaded = true;\n                    handler(elt);\n                }\n            }\n            if (delay) {\n                setTimeout(load, delay);\n            } else {\n                load();\n            }\n        }\n\n        function processVerbs(elt, nodeData, triggerSpecs) {\n            var explicitAction = false;\n            forEach(VERBS, function (verb) {\n                if (hasAttribute(elt,'hx-' + verb)) {\n                    var path = getAttributeValue(elt, 'hx-' + verb);\n                    explicitAction = true;\n                    nodeData.path = path;\n                    nodeData.verb = verb;\n                    triggerSpecs.forEach(function(triggerSpec) {\n                        addTriggerHandler(elt, triggerSpec, nodeData, function (elt, evt) {\n                            if (closest(elt, htmx.config.disableSelector)) {\n                                cleanUpElement(elt)\n                                return\n                            }\n                            issueAjaxRequest(verb, path, elt, evt)\n                        })\n                    });\n                }\n            });\n            return explicitAction;\n        }\n\n        function addTriggerHandler(elt, triggerSpec, nodeData, handler) {\n            if (triggerSpec.sseEvent) {\n                processSSETrigger(elt, handler, triggerSpec.sseEvent);\n            } else if (triggerSpec.trigger === \"revealed\") {\n                initScrollHandler();\n                addEventListener(elt, handler, nodeData, triggerSpec);\n                maybeReveal(elt);\n            } else if (triggerSpec.trigger === \"intersect\") {\n                var observerOptions = {};\n                if (triggerSpec.root) {\n                    observerOptions.root = querySelectorExt(elt, triggerSpec.root)\n                }\n                if (triggerSpec.threshold) {\n                    observerOptions.threshold = parseFloat(triggerSpec.threshold);\n                }\n                var observer = new IntersectionObserver(function (entries) {\n                    for (var i = 0; i < entries.length; i++) {\n                        var entry = entries[i];\n                        if (entry.isIntersecting) {\n                            triggerEvent(elt, \"intersect\");\n                            break;\n                        }\n                    }\n                }, observerOptions);\n                observer.observe(elt);\n                addEventListener(elt, handler, nodeData, triggerSpec);\n            } else if (triggerSpec.trigger === \"load\") {\n                if (!maybeFilterEvent(triggerSpec, elt, makeEvent(\"load\", {elt: elt}))) {\n                                loadImmediately(elt, handler, nodeData, triggerSpec.delay);\n                            }\n            } else if (triggerSpec.pollInterval) {\n                nodeData.polling = true;\n                processPolling(elt, handler, triggerSpec);\n            } else {\n                addEventListener(elt, handler, nodeData, triggerSpec);\n            }\n        }\n\n        function evalScript(script) {\n            if (htmx.config.allowScriptTags && (script.type === \"text/javascript\" || script.type === \"module\" || script.type === \"\") ) {\n                var newScript = getDocument().createElement(\"script\");\n                forEach(script.attributes, function (attr) {\n                    newScript.setAttribute(attr.name, attr.value);\n                });\n                newScript.textContent = script.textContent;\n                newScript.async = false;\n                if (htmx.config.inlineScriptNonce) {\n                    newScript.nonce = htmx.config.inlineScriptNonce;\n                }\n                var parent = script.parentElement;\n\n                try {\n                    parent.insertBefore(newScript, script);\n                } catch (e) {\n                    logError(e);\n                } finally {\n                    // remove old script element, but only if it is still in DOM\n                    if (script.parentElement) {\n                        script.parentElement.removeChild(script);\n                    }\n                }\n            }\n        }\n\n        function processScripts(elt) {\n            if (matches(elt, \"script\")) {\n                evalScript(elt);\n            }\n            forEach(findAll(elt, \"script\"), function (script) {\n                evalScript(script);\n            });\n        }\n\n        function hasChanceOfBeingBoosted() {\n            return document.querySelector(\"[hx-boost], [data-hx-boost]\");\n        }\n\n        function findHxOnWildcardElements(elt) {\n            if (!document.evaluate) return []\n\n            let node = null\n            const elements = []\n            const iter = document.evaluate('//*[@*[ starts-with(name(), \"hx-on:\") or starts-with(name(), \"data-hx-on:\") ]]', elt)\n            while (node = iter.iterateNext()) elements.push(node)\n            return elements\n        }\n\n        function findElementsToProcess(elt) {\n            if (elt.querySelectorAll) {\n                var boostedElts = hasChanceOfBeingBoosted() ? \", a\" : \"\";\n                var results = elt.querySelectorAll(VERB_SELECTOR + boostedElts + \", form, [type='submit'], [hx-sse], [data-hx-sse], [hx-ws],\" +\n                    \" [data-hx-ws], [hx-ext], [data-hx-ext], [hx-trigger], [data-hx-trigger], [hx-on], [data-hx-on]\");\n                return results;\n            } else {\n                return [];\n            }\n        }\n\n        function initButtonTracking(elt) {\n            // Handle submit buttons/inputs that have the form attribute set\n            // see https://developer.mozilla.org/docs/Web/HTML/Element/button\n            var form = resolveTarget(\"#\" + getRawAttribute(elt, \"form\")) || closest(elt, \"form\")\n            if (!form) {\n                return\n            }\n\n            var maybeSetLastButtonClicked = function (evt) {\n                var elt = closest(evt.target, \"button, input[type='submit']\");\n                if (elt !== null) {\n                    var internalData = getInternalData(form);\n                    internalData.lastButtonClicked = elt;\n                }\n            };\n\n            // need to handle both click and focus in:\n            //   focusin - in case someone tabs in to a button and hits the space bar\n            //   click - on OSX buttons do not focus on click see https://bugs.webkit.org/show_bug.cgi?id=13724\n\n            elt.addEventListener('click', maybeSetLastButtonClicked)\n            elt.addEventListener('focusin', maybeSetLastButtonClicked)\n            elt.addEventListener('focusout', function(evt){\n                var internalData = getInternalData(form);\n                internalData.lastButtonClicked = null;\n            })\n        }\n\n        function countCurlies(line) {\n            var tokens = tokenizeString(line);\n            var netCurlies = 0;\n            for (let i = 0; i < tokens.length; i++) {\n                const token = tokens[i];\n                if (token === \"{\") {\n                    netCurlies++;\n                } else if (token === \"}\") {\n                    netCurlies--;\n                }\n            }\n            return netCurlies;\n        }\n\n        function addHxOnEventHandler(elt, eventName, code) {\n            var nodeData = getInternalData(elt);\n            nodeData.onHandlers = [];\n            var func;\n            var listener = function (e) {\n                return maybeEval(elt, function() {\n                    if (!func) {\n                        func = new Function(\"event\", code);\n                    }\n                    func.call(elt, e);\n                });\n            };\n            elt.addEventListener(eventName, listener);\n            nodeData.onHandlers.push({event:eventName, listener:listener});\n        }\n\n        function processHxOn(elt) {\n            var hxOnValue = getAttributeValue(elt, 'hx-on');\n            if (hxOnValue) {\n                var handlers = {}\n                var lines = hxOnValue.split(\"\\n\");\n                var currentEvent = null;\n                var curlyCount = 0;\n                while (lines.length > 0) {\n                    var line = lines.shift();\n                    var match = line.match(/^\\s*([a-zA-Z:\\-]+:)(.*)/);\n                    if (curlyCount === 0 && match) {\n                        line.split(\":\")\n                        currentEvent = match[1].slice(0, -1); // strip last colon\n                        handlers[currentEvent] = match[2];\n                    } else {\n                        handlers[currentEvent] += line;\n                    }\n                    curlyCount += countCurlies(line);\n                }\n\n                for (var eventName in handlers) {\n                    addHxOnEventHandler(elt, eventName, handlers[eventName]);\n                }\n            }\n        }\n\n        function processHxOnWildcard(elt) {\n            // wipe any previous on handlers so that this function takes precedence\n            deInitOnHandlers(elt)\n\n            for (var i = 0; i < elt.attributes.length; i++) {\n                var name = elt.attributes[i].name\n                var value = elt.attributes[i].value\n                if (name.startsWith(\"hx-on:\") || name.startsWith(\"data-hx-on:\")) {\n                    let eventName = name.slice(name.indexOf(\":\") + 1)\n                    // if the eventName starts with a colon, prepend \"htmx\" for shorthand support\n                    if (eventName.startsWith(\":\")) eventName = \"htmx\" + eventName\n\n                    addHxOnEventHandler(elt, eventName, value)\n                }\n            }\n        }\n\n        function initNode(elt) {\n            if (closest(elt, htmx.config.disableSelector)) {\n                cleanUpElement(elt)\n                return;\n            }\n            var nodeData = getInternalData(elt);\n            if (nodeData.initHash !== attributeHash(elt)) {\n                // clean up any previously processed info\n                deInitNode(elt);\n\n                nodeData.initHash = attributeHash(elt);\n\n                processHxOn(elt);\n\n                triggerEvent(elt, \"htmx:beforeProcessNode\")\n\n                if (elt.value) {\n                    nodeData.lastValue = elt.value;\n                }\n\n                var triggerSpecs = getTriggerSpecs(elt);\n                var hasExplicitHttpAction = processVerbs(elt, nodeData, triggerSpecs);\n\n                if (!hasExplicitHttpAction) {\n                    if (getClosestAttributeValue(elt, \"hx-boost\") === \"true\") {\n                        boostElement(elt, nodeData, triggerSpecs);\n                    } else if (hasAttribute(elt, 'hx-trigger')) {\n                        triggerSpecs.forEach(function (triggerSpec) {\n                            // For \"naked\" triggers, don't do anything at all\n                            addTriggerHandler(elt, triggerSpec, nodeData, function () {\n                            })\n                        })\n                    }\n                }\n\n                // Handle submit buttons/inputs that have the form attribute set\n                // see https://developer.mozilla.org/docs/Web/HTML/Element/button\n                if (elt.tagName === \"FORM\" || (getRawAttribute(elt, \"type\") === \"submit\" && hasAttribute(elt, \"form\"))) {\n                    initButtonTracking(elt)\n                }\n\n                var sseInfo = getAttributeValue(elt, 'hx-sse');\n                if (sseInfo) {\n                    processSSEInfo(elt, nodeData, sseInfo);\n                }\n\n                var wsInfo = getAttributeValue(elt, 'hx-ws');\n                if (wsInfo) {\n                    processWebSocketInfo(elt, nodeData, wsInfo);\n                }\n                triggerEvent(elt, \"htmx:afterProcessNode\");\n            }\n        }\n\n        function processNode(elt) {\n            elt = resolveTarget(elt);\n            if (closest(elt, htmx.config.disableSelector)) {\n                cleanUpElement(elt)\n                return;\n            }\n            initNode(elt);\n            forEach(findElementsToProcess(elt), function(child) { initNode(child) });\n            // Because it happens second, the new way of adding onHandlers superseeds the old one\n            // i.e. if there are any hx-on:eventName attributes, the hx-on attribute will be ignored\n            forEach(findHxOnWildcardElements(elt), processHxOnWildcard);\n        }\n\n        //====================================================================\n        // Event/Log Support\n        //====================================================================\n\n        function kebabEventName(str) {\n            return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n        }\n\n        function makeEvent(eventName, detail) {\n            var evt;\n            if (window.CustomEvent && typeof window.CustomEvent === 'function') {\n                evt = new CustomEvent(eventName, {bubbles: true, cancelable: true, detail: detail});\n            } else {\n                evt = getDocument().createEvent('CustomEvent');\n                evt.initCustomEvent(eventName, true, true, detail);\n            }\n            return evt;\n        }\n\n        function triggerErrorEvent(elt, eventName, detail) {\n            triggerEvent(elt, eventName, mergeObjects({error:eventName}, detail));\n        }\n\n        function ignoreEventForLogging(eventName) {\n            return eventName === \"htmx:afterProcessNode\"\n        }\n\n        /**\n         * `withExtensions` locates all active extensions for a provided element, then\n         * executes the provided function using each of the active extensions.  It should\n         * be called internally at every extendable execution point in htmx.\n         *\n         * @param {HTMLElement} elt\n         * @param {(extension:import(\"./htmx\").HtmxExtension) => void} toDo\n         * @returns void\n         */\n        function withExtensions(elt, toDo) {\n            forEach(getExtensions(elt), function(extension){\n                try {\n                    toDo(extension);\n                } catch (e) {\n                    logError(e);\n                }\n            });\n        }\n\n        function logError(msg) {\n            if(console.error) {\n                console.error(msg);\n            } else if (console.log) {\n                console.log(\"ERROR: \", msg);\n            }\n        }\n\n        function triggerEvent(elt, eventName, detail) {\n            elt = resolveTarget(elt);\n            if (detail == null) {\n                detail = {};\n            }\n            detail[\"elt\"] = elt;\n            var event = makeEvent(eventName, detail);\n            if (htmx.logger && !ignoreEventForLogging(eventName)) {\n                htmx.logger(elt, eventName, detail);\n            }\n            if (detail.error) {\n                logError(detail.error);\n                triggerEvent(elt, \"htmx:error\", {errorInfo:detail})\n            }\n            var eventResult = elt.dispatchEvent(event);\n            var kebabName = kebabEventName(eventName);\n            if (eventResult && kebabName !== eventName) {\n                var kebabedEvent = makeEvent(kebabName, event.detail);\n                eventResult = eventResult && elt.dispatchEvent(kebabedEvent)\n            }\n            withExtensions(elt, function (extension) {\n                eventResult = eventResult && (extension.onEvent(eventName, event) !== false)\n            });\n            return eventResult;\n        }\n\n        //====================================================================\n        // History Support\n        //====================================================================\n        var currentPathForHistory = location.pathname+location.search;\n\n        function getHistoryElement() {\n            var historyElt = getDocument().querySelector('[hx-history-elt],[data-hx-history-elt]');\n            return historyElt || getDocument().body;\n        }\n\n        function saveToHistoryCache(url, content, title, scroll) {\n            if (!canAccessLocalStorage()) {\n                return;\n            }\n\n            url = normalizePath(url);\n\n            var historyCache = parseJSON(localStorage.getItem(\"htmx-history-cache\")) || [];\n            for (var i = 0; i < historyCache.length; i++) {\n                if (historyCache[i].url === url) {\n                    historyCache.splice(i, 1);\n                    break;\n                }\n            }\n            var newHistoryItem = {url:url, content: content, title:title, scroll:scroll};\n            triggerEvent(getDocument().body, \"htmx:historyItemCreated\", {item:newHistoryItem, cache: historyCache})\n            historyCache.push(newHistoryItem)\n            while (historyCache.length > htmx.config.historyCacheSize) {\n                historyCache.shift();\n            }\n            while(historyCache.length > 0){\n                try {\n                    localStorage.setItem(\"htmx-history-cache\", JSON.stringify(historyCache));\n                    break;\n                } catch (e) {\n                    triggerErrorEvent(getDocument().body, \"htmx:historyCacheError\", {cause:e, cache: historyCache})\n                    historyCache.shift(); // shrink the cache and retry\n                }\n            }\n        }\n\n        function getCachedHistory(url) {\n            if (!canAccessLocalStorage()) {\n                return null;\n            }\n\n            url = normalizePath(url);\n\n            var historyCache = parseJSON(localStorage.getItem(\"htmx-history-cache\")) || [];\n            for (var i = 0; i < historyCache.length; i++) {\n                if (historyCache[i].url === url) {\n                    return historyCache[i];\n                }\n            }\n            return null;\n        }\n\n        function cleanInnerHtmlForHistory(elt) {\n            var className = htmx.config.requestClass;\n            var clone = elt.cloneNode(true);\n            forEach(findAll(clone, \".\" + className), function(child){\n                removeClassFromElement(child, className);\n            });\n            return clone.innerHTML;\n        }\n\n        function saveCurrentPageToHistory() {\n            var elt = getHistoryElement();\n            var path = currentPathForHistory || location.pathname+location.search;\n\n            // Allow history snapshot feature to be disabled where hx-history=\"false\"\n            // is present *anywhere* in the current document we're about to save,\n            // so we can prevent privileged data entering the cache.\n            // The page will still be reachable as a history entry, but htmx will fetch it\n            // live from the server onpopstate rather than look in the localStorage cache\n            var disableHistoryCache = getDocument().querySelector('[hx-history=\"false\" i],[data-hx-history=\"false\" i]');\n            if (!disableHistoryCache) {\n                triggerEvent(getDocument().body, \"htmx:beforeHistorySave\", {path: path, historyElt: elt});\n                saveToHistoryCache(path, cleanInnerHtmlForHistory(elt), getDocument().title, window.scrollY);\n            }\n\n            if (htmx.config.historyEnabled) history.replaceState({htmx: true}, getDocument().title, window.location.href);\n        }\n\n        function pushUrlIntoHistory(path) {\n            // remove the cache buster parameter, if any\n            if (htmx.config.getCacheBusterParam) {\n                path = path.replace(/org\\.htmx\\.cache-buster=[^&]*&?/, '')\n                if (path.endsWith('&') || path.endsWith(\"?\")) {\n                    path = path.slice(0, -1);\n                }\n            }\n            if(htmx.config.historyEnabled) {\n                history.pushState({htmx:true}, \"\", path);\n            }\n            currentPathForHistory = path;\n        }\n\n        function replaceUrlInHistory(path) {\n            if(htmx.config.historyEnabled)  history.replaceState({htmx:true}, \"\", path);\n            currentPathForHistory = path;\n        }\n\n        function settleImmediately(tasks) {\n            forEach(tasks, function (task) {\n                task.call();\n            });\n        }\n\n        function loadHistoryFromServer(path) {\n            var request = new XMLHttpRequest();\n            var details = {path: path, xhr:request};\n            triggerEvent(getDocument().body, \"htmx:historyCacheMiss\", details);\n            request.open('GET', path, true);\n            request.setRequestHeader(\"HX-History-Restore-Request\", \"true\");\n            request.onload = function () {\n                if (this.status >= 200 && this.status < 400) {\n                    triggerEvent(getDocument().body, \"htmx:historyCacheMissLoad\", details);\n                    var fragment = makeFragment(this.response);\n                    // @ts-ignore\n                    fragment = fragment.querySelector('[hx-history-elt],[data-hx-history-elt]') || fragment;\n                    var historyElement = getHistoryElement();\n                    var settleInfo = makeSettleInfo(historyElement);\n                    var title = findTitle(this.response);\n                    if (title) {\n                        var titleElt = find(\"title\");\n                        if (titleElt) {\n                            titleElt.innerHTML = title;\n                        } else {\n                            window.document.title = title;\n                        }\n                    }\n                    // @ts-ignore\n                    swapInnerHTML(historyElement, fragment, settleInfo)\n                    settleImmediately(settleInfo.tasks);\n                    currentPathForHistory = path;\n                    triggerEvent(getDocument().body, \"htmx:historyRestore\", {path: path, cacheMiss:true, serverResponse:this.response});\n                } else {\n                    triggerErrorEvent(getDocument().body, \"htmx:historyCacheMissLoadError\", details);\n                }\n            };\n            request.send();\n        }\n\n        function restoreHistory(path) {\n            saveCurrentPageToHistory();\n            path = path || location.pathname+location.search;\n            var cached = getCachedHistory(path);\n            if (cached) {\n                var fragment = makeFragment(cached.content);\n                var historyElement = getHistoryElement();\n                var settleInfo = makeSettleInfo(historyElement);\n                swapInnerHTML(historyElement, fragment, settleInfo)\n                settleImmediately(settleInfo.tasks);\n                document.title = cached.title;\n                setTimeout(function () {\n                    window.scrollTo(0, cached.scroll);\n                }, 0); // next 'tick', so browser has time to render layout\n                currentPathForHistory = path;\n                triggerEvent(getDocument().body, \"htmx:historyRestore\", {path:path, item:cached});\n            } else {\n                if (htmx.config.refreshOnHistoryMiss) {\n\n                    // @ts-ignore: optional parameter in reload() function throws error\n                    window.location.reload(true);\n                } else {\n                    loadHistoryFromServer(path);\n                }\n            }\n        }\n\n        function addRequestIndicatorClasses(elt) {\n            var indicators = findAttributeTargets(elt, 'hx-indicator');\n            if (indicators == null) {\n                indicators = [elt];\n            }\n            forEach(indicators, function (ic) {\n                var internalData = getInternalData(ic);\n                internalData.requestCount = (internalData.requestCount || 0) + 1;\n                ic.classList[\"add\"].call(ic.classList, htmx.config.requestClass);\n            });\n            return indicators;\n        }\n\n        function removeRequestIndicatorClasses(indicators) {\n            forEach(indicators, function (ic) {\n                var internalData = getInternalData(ic);\n                internalData.requestCount = (internalData.requestCount || 0) - 1;\n                if (internalData.requestCount === 0) {\n                    ic.classList[\"remove\"].call(ic.classList, htmx.config.requestClass);\n                }\n            });\n        }\n\n        //====================================================================\n        // Input Value Processing\n        //====================================================================\n\n        function haveSeenNode(processed, elt) {\n            for (var i = 0; i < processed.length; i++) {\n                var node = processed[i];\n                if (node.isSameNode(elt)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function shouldInclude(elt) {\n            if(elt.name === \"\" || elt.name == null || elt.disabled) {\n                return false;\n            }\n            // ignore \"submitter\" types (see jQuery src/serialize.js)\n            if (elt.type === \"button\" || elt.type === \"submit\" || elt.tagName === \"image\" || elt.tagName === \"reset\" || elt.tagName === \"file\" ) {\n                return false;\n            }\n            if (elt.type === \"checkbox\" || elt.type === \"radio\" ) {\n                return elt.checked;\n            }\n            return true;\n        }\n\n        function addValueToValues(name, value, values) {\n            // This is a little ugly because both the current value of the named value in the form\n            // and the new value could be arrays, so we have to handle all four cases :/\n            if (name != null && value != null) {\n                var current = values[name];\n                if (current === undefined) {\n                    values[name] = value;\n                } else if (Array.isArray(current)) {\n                    if (Array.isArray(value)) {\n                        values[name] = current.concat(value);\n                    } else {\n                        current.push(value);\n                    }\n                } else {\n                    if (Array.isArray(value)) {\n                        values[name] = [current].concat(value);\n                    } else {\n                        values[name] = [current, value];\n                    }\n                }\n            }\n        }\n\n        function processInputValue(processed, values, errors, elt, validate) {\n            if (elt == null || haveSeenNode(processed, elt)) {\n                return;\n            } else {\n                processed.push(elt);\n            }\n            if (shouldInclude(elt)) {\n                var name = getRawAttribute(elt,\"name\");\n                var value = elt.value;\n                if (elt.multiple) {\n                    value = toArray(elt.querySelectorAll(\"option:checked\")).map(function (e) { return e.value });\n                }\n                // include file inputs\n                if (elt.files) {\n                    value = toArray(elt.files);\n                }\n                addValueToValues(name, value, values);\n                if (validate) {\n                    validateElement(elt, errors);\n                }\n            }\n            if (matches(elt, 'form')) {\n                var inputs = elt.elements;\n                forEach(inputs, function(input) {\n                    processInputValue(processed, values, errors, input, validate);\n                });\n            }\n        }\n\n        function validateElement(element, errors) {\n            if (element.willValidate) {\n                triggerEvent(element, \"htmx:validation:validate\")\n                if (!element.checkValidity()) {\n                    errors.push({elt: element, message:element.validationMessage, validity:element.validity});\n                    triggerEvent(element, \"htmx:validation:failed\", {message:element.validationMessage, validity:element.validity})\n                }\n            }\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {string} verb\n         */\n        function getInputValues(elt, verb) {\n            var processed = [];\n            var values = {};\n            var formValues = {};\n            var errors = [];\n            var internalData = getInternalData(elt);\n\n            // only validate when form is directly submitted and novalidate or formnovalidate are not set\n            // or if the element has an explicit hx-validate=\"true\" on it\n            var validate = (matches(elt, 'form') && elt.noValidate !== true) || getAttributeValue(elt, \"hx-validate\") === \"true\";\n            if (internalData.lastButtonClicked) {\n                validate = validate && internalData.lastButtonClicked.formNoValidate !== true;\n            }\n\n            // for a non-GET include the closest form\n            if (verb !== 'get') {\n                processInputValue(processed, formValues, errors, closest(elt, 'form'), validate);\n            }\n\n            // include the element itself\n            processInputValue(processed, values, errors, elt, validate);\n\n            // if a button or submit was clicked last, include its value\n            if (internalData.lastButtonClicked || elt.tagName === \"BUTTON\" ||\n                (elt.tagName === \"INPUT\" && getRawAttribute(elt, \"type\") === \"submit\")) {\n                var button = internalData.lastButtonClicked || elt\n                var name = getRawAttribute(button, \"name\")\n                addValueToValues(name, button.value, formValues)\n            }\n\n            // include any explicit includes\n            var includes = findAttributeTargets(elt, \"hx-include\");\n            forEach(includes, function(node) {\n                processInputValue(processed, values, errors, node, validate);\n                // if a non-form is included, include any input values within it\n                if (!matches(node, 'form')) {\n                    forEach(node.querySelectorAll(INPUT_SELECTOR), function (descendant) {\n                        processInputValue(processed, values, errors, descendant, validate);\n                    })\n                }\n            });\n\n            // form values take precedence, overriding the regular values\n            values = mergeObjects(values, formValues);\n\n            return {errors:errors, values:values};\n        }\n\n        function appendParam(returnStr, name, realValue) {\n            if (returnStr !== \"\") {\n                returnStr += \"&\";\n            }\n            if (String(realValue) === \"[object Object]\") {\n                realValue = JSON.stringify(realValue);\n            }\n            var s = encodeURIComponent(realValue);\n            returnStr += encodeURIComponent(name) + \"=\" + s;\n            return returnStr;\n        }\n\n        function urlEncode(values) {\n            var returnStr = \"\";\n            for (var name in values) {\n                if (values.hasOwnProperty(name)) {\n                    var value = values[name];\n                    if (Array.isArray(value)) {\n                        forEach(value, function(v) {\n                            returnStr = appendParam(returnStr, name, v);\n                        });\n                    } else {\n                        returnStr = appendParam(returnStr, name, value);\n                    }\n                }\n            }\n            return returnStr;\n        }\n\n        function makeFormData(values) {\n            var formData = new FormData();\n            for (var name in values) {\n                if (values.hasOwnProperty(name)) {\n                    var value = values[name];\n                    if (Array.isArray(value)) {\n                        forEach(value, function(v) {\n                            formData.append(name, v);\n                        });\n                    } else {\n                        formData.append(name, value);\n                    }\n                }\n            }\n            return formData;\n        }\n\n        //====================================================================\n        // Ajax\n        //====================================================================\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {HTMLElement} target\n         * @param {string} prompt\n         * @returns {Object} // TODO: Define/Improve HtmxHeaderSpecification\n         */\n        function getHeaders(elt, target, prompt) {\n            var headers = {\n                \"HX-Request\" : \"true\",\n                \"HX-Trigger\" : getRawAttribute(elt, \"id\"),\n                \"HX-Trigger-Name\" : getRawAttribute(elt, \"name\"),\n                \"HX-Target\" : getAttributeValue(target, \"id\"),\n                \"HX-Current-URL\" : getDocument().location.href,\n            }\n            getValuesForElement(elt, \"hx-headers\", false, headers)\n            if (prompt !== undefined) {\n                headers[\"HX-Prompt\"] = prompt;\n            }\n            if (getInternalData(elt).boosted) {\n                headers[\"HX-Boosted\"] = \"true\";\n            }\n            return headers;\n        }\n\n        /**\n         * filterValues takes an object containing form input values\n         * and returns a new object that only contains keys that are\n         * specified by the closest \"hx-params\" attribute\n         * @param {Object} inputValues\n         * @param {HTMLElement} elt\n         * @returns {Object}\n         */\n        function filterValues(inputValues, elt) {\n            var paramsValue = getClosestAttributeValue(elt, \"hx-params\");\n            if (paramsValue) {\n                if (paramsValue === \"none\") {\n                    return {};\n                } else if (paramsValue === \"*\") {\n                    return inputValues;\n                } else if(paramsValue.indexOf(\"not \") === 0) {\n                    forEach(paramsValue.substr(4).split(\",\"), function (name) {\n                        name = name.trim();\n                        delete inputValues[name];\n                    });\n                    return inputValues;\n                } else {\n                    var newValues = {}\n                    forEach(paramsValue.split(\",\"), function (name) {\n                        name = name.trim();\n                        newValues[name] = inputValues[name];\n                    });\n                    return newValues;\n                }\n            } else {\n                return inputValues;\n            }\n        }\n\n        function isAnchorLink(elt) {\n          return getRawAttribute(elt, 'href') && getRawAttribute(elt, 'href').indexOf(\"#\") >=0\n        }\n\n        /**\n         *\n         * @param {HTMLElement} elt\n         * @param {string} swapInfoOverride\n         * @returns {import(\"./htmx\").HtmxSwapSpecification}\n         */\n        function getSwapSpecification(elt, swapInfoOverride) {\n            var swapInfo = swapInfoOverride ? swapInfoOverride : getClosestAttributeValue(elt, \"hx-swap\");\n            var swapSpec = {\n                \"swapStyle\" : getInternalData(elt).boosted ? 'innerHTML' : htmx.config.defaultSwapStyle,\n                \"swapDelay\" : htmx.config.defaultSwapDelay,\n                \"settleDelay\" : htmx.config.defaultSettleDelay\n            }\n            if (getInternalData(elt).boosted && !isAnchorLink(elt)) {\n              swapSpec[\"show\"] = \"top\"\n            }\n            if (swapInfo) {\n                var split = splitOnWhitespace(swapInfo);\n                if (split.length > 0) {\n                    swapSpec[\"swapStyle\"] = split[0];\n                    for (var i = 1; i < split.length; i++) {\n                        var modifier = split[i];\n                        if (modifier.indexOf(\"swap:\") === 0) {\n                            swapSpec[\"swapDelay\"] = parseInterval(modifier.substr(5));\n                        }\n                        if (modifier.indexOf(\"settle:\") === 0) {\n                            swapSpec[\"settleDelay\"] = parseInterval(modifier.substr(7));\n                        }\n                        if (modifier.indexOf(\"transition:\") === 0) {\n                            swapSpec[\"transition\"] = modifier.substr(11) === \"true\";\n                        }\n                        if (modifier.indexOf(\"scroll:\") === 0) {\n                            var scrollSpec = modifier.substr(7);\n                            var splitSpec = scrollSpec.split(\":\");\n                            var scrollVal = splitSpec.pop();\n                            var selectorVal = splitSpec.length > 0 ? splitSpec.join(\":\") : null;\n                            swapSpec[\"scroll\"] = scrollVal;\n                            swapSpec[\"scrollTarget\"] = selectorVal;\n                        }\n                        if (modifier.indexOf(\"show:\") === 0) {\n                            var showSpec = modifier.substr(5);\n                            var splitSpec = showSpec.split(\":\");\n                            var showVal = splitSpec.pop();\n                            var selectorVal = splitSpec.length > 0 ? splitSpec.join(\":\") : null;\n                            swapSpec[\"show\"] = showVal;\n                            swapSpec[\"showTarget\"] = selectorVal;\n                        }\n                        if (modifier.indexOf(\"focus-scroll:\") === 0) {\n                            var focusScrollVal = modifier.substr(\"focus-scroll:\".length);\n                            swapSpec[\"focusScroll\"] = focusScrollVal == \"true\";\n                        }\n                    }\n                }\n            }\n            return swapSpec;\n        }\n\n        function usesFormData(elt) {\n            return getClosestAttributeValue(elt, \"hx-encoding\") === \"multipart/form-data\" ||\n                (matches(elt, \"form\") && getRawAttribute(elt, 'enctype') === \"multipart/form-data\");\n        }\n\n        function encodeParamsForBody(xhr, elt, filteredParameters) {\n            var encodedParameters = null;\n            withExtensions(elt, function (extension) {\n                if (encodedParameters == null) {\n                    encodedParameters = extension.encodeParameters(xhr, filteredParameters, elt);\n                }\n            });\n            if (encodedParameters != null) {\n                return encodedParameters;\n            } else {\n                if (usesFormData(elt)) {\n                    return makeFormData(filteredParameters);\n                } else {\n                    return urlEncode(filteredParameters);\n                }\n            }\n        }\n\n        /**\n         *\n         * @param {Element} target\n         * @returns {import(\"./htmx\").HtmxSettleInfo}\n         */\n        function makeSettleInfo(target) {\n            return {tasks: [], elts: [target]};\n        }\n\n        function updateScrollState(content, swapSpec) {\n            var first = content[0];\n            var last = content[content.length - 1];\n            if (swapSpec.scroll) {\n                var target = null;\n                if (swapSpec.scrollTarget) {\n                    target = querySelectorExt(first, swapSpec.scrollTarget);\n                }\n                if (swapSpec.scroll === \"top\" && (first || target)) {\n                    target = target || first;\n                    target.scrollTop = 0;\n                }\n                if (swapSpec.scroll === \"bottom\" && (last || target)) {\n                    target = target || last;\n                    target.scrollTop = target.scrollHeight;\n                }\n            }\n            if (swapSpec.show) {\n                var target = null;\n                if (swapSpec.showTarget) {\n                    var targetStr = swapSpec.showTarget;\n                    if (swapSpec.showTarget === \"window\") {\n                        targetStr = \"body\";\n                    }\n                    target = querySelectorExt(first, targetStr);\n                }\n                if (swapSpec.show === \"top\" && (first || target)) {\n                    target = target || first;\n                    target.scrollIntoView({block:'start', behavior: htmx.config.scrollBehavior});\n                }\n                if (swapSpec.show === \"bottom\" && (last || target)) {\n                    target = target || last;\n                    target.scrollIntoView({block:'end', behavior: htmx.config.scrollBehavior});\n                }\n            }\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {string} attr\n         * @param {boolean=} evalAsDefault\n         * @param {Object=} values\n         * @returns {Object}\n         */\n        function getValuesForElement(elt, attr, evalAsDefault, values) {\n            if (values == null) {\n                values = {};\n            }\n            if (elt == null) {\n                return values;\n            }\n            var attributeValue = getAttributeValue(elt, attr);\n            if (attributeValue) {\n                var str = attributeValue.trim();\n                var evaluateValue = evalAsDefault;\n                if (str === \"unset\") {\n                    return null;\n                }\n                if (str.indexOf(\"javascript:\") === 0) {\n                    str = str.substr(11);\n                    evaluateValue = true;\n                } else if (str.indexOf(\"js:\") === 0) {\n                    str = str.substr(3);\n                    evaluateValue = true;\n                }\n                if (str.indexOf('{') !== 0) {\n                    str = \"{\" + str + \"}\";\n                }\n                var varsValues;\n                if (evaluateValue) {\n                    varsValues = maybeEval(elt,function () {return Function(\"return (\" + str + \")\")();}, {});\n                } else {\n                    varsValues = parseJSON(str);\n                }\n                for (var key in varsValues) {\n                    if (varsValues.hasOwnProperty(key)) {\n                        if (values[key] == null) {\n                            values[key] = varsValues[key];\n                        }\n                    }\n                }\n            }\n            return getValuesForElement(parentElt(elt), attr, evalAsDefault, values);\n        }\n\n        function maybeEval(elt, toEval, defaultVal) {\n            if (htmx.config.allowEval) {\n                return toEval();\n            } else {\n                triggerErrorEvent(elt, 'htmx:evalDisallowedError');\n                return defaultVal;\n            }\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {*} expressionVars\n         * @returns\n         */\n        function getHXVarsForElement(elt, expressionVars) {\n            return getValuesForElement(elt, \"hx-vars\", true, expressionVars);\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @param {*} expressionVars\n         * @returns\n         */\n        function getHXValsForElement(elt, expressionVars) {\n            return getValuesForElement(elt, \"hx-vals\", false, expressionVars);\n        }\n\n        /**\n         * @param {HTMLElement} elt\n         * @returns {Object}\n         */\n        function getExpressionVars(elt) {\n            return mergeObjects(getHXVarsForElement(elt), getHXValsForElement(elt));\n        }\n\n        function safelySetHeaderValue(xhr, header, headerValue) {\n            if (headerValue !== null) {\n                try {\n                    xhr.setRequestHeader(header, headerValue);\n                } catch (e) {\n                    // On an exception, try to set the header URI encoded instead\n                    xhr.setRequestHeader(header, encodeURIComponent(headerValue));\n                    xhr.setRequestHeader(header + \"-URI-AutoEncoded\", \"true\");\n                }\n            }\n        }\n\n        function getPathFromResponse(xhr) {\n            // NB: IE11 does not support this stuff\n            if (xhr.responseURL && typeof(URL) !== \"undefined\") {\n                try {\n                    var url = new URL(xhr.responseURL);\n                    return url.pathname + url.search;\n                } catch (e) {\n                    triggerErrorEvent(getDocument().body, \"htmx:badResponseUrl\", {url: xhr.responseURL});\n                }\n            }\n        }\n\n        function hasHeader(xhr, regexp) {\n            return xhr.getAllResponseHeaders().match(regexp);\n        }\n\n        function ajaxHelper(verb, path, context) {\n            verb = verb.toLowerCase();\n            if (context) {\n                if (context instanceof Element || isType(context, 'String')) {\n                    return issueAjaxRequest(verb, path, null, null, {\n                        targetOverride: resolveTarget(context),\n                        returnPromise: true\n                    });\n                } else {\n                    return issueAjaxRequest(verb, path, resolveTarget(context.source), context.event,\n                        {\n                            handler : context.handler,\n                            headers : context.headers,\n                            values : context.values,\n                            targetOverride: resolveTarget(context.target),\n                            swapOverride: context.swap,\n                            returnPromise: true\n                        });\n                }\n            } else {\n                return issueAjaxRequest(verb, path, null, null, {\n                        returnPromise: true\n                });\n            }\n        }\n\n        function hierarchyForElt(elt) {\n            var arr = [];\n            while (elt) {\n                arr.push(elt);\n                elt = elt.parentElement;\n            }\n            return arr;\n        }\n\n        function verifyPath(elt, path, requestConfig) {\n            var url = new URL(path, document.location.href);\n            var origin = document.location.origin;\n            var sameHost = origin === url.origin;\n            if (htmx.config.selfRequestsOnly) {\n                if (!sameHost) {\n                    return false;\n                }\n            }\n            return triggerEvent(elt, \"htmx:validateUrl\", mergeObjects({url: url, sameHost: sameHost}, requestConfig));\n        }\n\n        function issueAjaxRequest(verb, path, elt, event, etc, confirmed) {\n            var resolve = null;\n            var reject = null;\n            etc = etc != null ? etc : {};\n            if(etc.returnPromise && typeof Promise !== \"undefined\"){\n                var promise = new Promise(function (_resolve, _reject) {\n                    resolve = _resolve;\n                    reject = _reject;\n                });\n            }\n            if(elt == null) {\n                elt = getDocument().body;\n            }\n            var responseHandler = etc.handler || handleAjaxResponse;\n\n            if (!bodyContains(elt)) {\n                return; // do not issue requests for elements removed from the DOM\n            }\n            var target = etc.targetOverride || getTarget(elt);\n            if (target == null || target == DUMMY_ELT) {\n                triggerErrorEvent(elt, 'htmx:targetError', {target: getAttributeValue(elt, \"hx-target\")});\n                return;\n            }\n\n            // allow event-based confirmation w/ a callback\n            if (!confirmed) {\n                var issueRequest = function() {\n                    return issueAjaxRequest(verb, path, elt, event, etc, true);\n                }\n                var confirmDetails = {target: target, elt: elt, path: path, verb: verb, triggeringEvent: event, etc: etc, issueRequest: issueRequest};\n                if (triggerEvent(elt, 'htmx:confirm', confirmDetails) === false) {\n                    return;\n                }\n            }\n\n            var syncElt = elt;\n            var eltData = getInternalData(elt);\n            var syncStrategy = getClosestAttributeValue(elt, \"hx-sync\");\n            var queueStrategy = null;\n            var abortable = false;\n            if (syncStrategy) {\n                var syncStrings = syncStrategy.split(\":\");\n                var selector = syncStrings[0].trim();\n                if (selector === \"this\") {\n                    syncElt = findThisElement(elt, 'hx-sync');\n                } else {\n                    syncElt = querySelectorExt(elt, selector);\n                }\n                // default to the drop strategy\n                syncStrategy = (syncStrings[1] || 'drop').trim();\n                eltData = getInternalData(syncElt);\n                if (syncStrategy === \"drop\" && eltData.xhr && eltData.abortable !== true) {\n                    return;\n                } else if (syncStrategy === \"abort\") {\n                    if (eltData.xhr) {\n                        return;\n                    } else {\n                        abortable = true;\n                    }\n                } else if (syncStrategy === \"replace\") {\n                    triggerEvent(syncElt, 'htmx:abort'); // abort the current request and continue\n                } else if (syncStrategy.indexOf(\"queue\") === 0) {\n                    var queueStrArray = syncStrategy.split(\" \");\n                    queueStrategy = (queueStrArray[1] || \"last\").trim();\n                }\n            }\n\n            if (eltData.xhr) {\n                if (eltData.abortable) {\n                    triggerEvent(syncElt, 'htmx:abort'); // abort the current request and continue\n                } else {\n                    if(queueStrategy == null){\n                        if (event) {\n                            var eventData = getInternalData(event);\n                            if (eventData && eventData.triggerSpec && eventData.triggerSpec.queue) {\n                                queueStrategy = eventData.triggerSpec.queue;\n                            }\n                        }\n                        if (queueStrategy == null) {\n                            queueStrategy = \"last\";\n                        }\n                    }\n                    if (eltData.queuedRequests == null) {\n                        eltData.queuedRequests = [];\n                    }\n                    if (queueStrategy === \"first\" && eltData.queuedRequests.length === 0) {\n                        eltData.queuedRequests.push(function () {\n                            issueAjaxRequest(verb, path, elt, event, etc)\n                        });\n                    } else if (queueStrategy === \"all\") {\n                        eltData.queuedRequests.push(function () {\n                            issueAjaxRequest(verb, path, elt, event, etc)\n                        });\n                    } else if (queueStrategy === \"last\") {\n                        eltData.queuedRequests = []; // dump existing queue\n                        eltData.queuedRequests.push(function () {\n                            issueAjaxRequest(verb, path, elt, event, etc)\n                        });\n                    }\n                    return;\n                }\n            }\n\n            var xhr = new XMLHttpRequest();\n            eltData.xhr = xhr;\n            eltData.abortable = abortable;\n            var endRequestLock = function(){\n                eltData.xhr = null;\n                eltData.abortable = false;\n                if (eltData.queuedRequests != null &&\n                    eltData.queuedRequests.length > 0) {\n                    var queuedRequest = eltData.queuedRequests.shift();\n                    queuedRequest();\n                }\n            }\n            var promptQuestion = getClosestAttributeValue(elt, \"hx-prompt\");\n            if (promptQuestion) {\n                var promptResponse = prompt(promptQuestion);\n                // prompt returns null if cancelled and empty string if accepted with no entry\n                if (promptResponse === null ||\n                    !triggerEvent(elt, 'htmx:prompt', {prompt: promptResponse, target:target})) {\n                    maybeCall(resolve);\n                    endRequestLock();\n                    return promise;\n                }\n            }\n\n            var confirmQuestion = getClosestAttributeValue(elt, \"hx-confirm\");\n            if (confirmQuestion) {\n                if(!confirm(confirmQuestion)) {\n                    maybeCall(resolve);\n                    endRequestLock()\n                    return promise;\n                }\n            }\n\n\n            var headers = getHeaders(elt, target, promptResponse);\n            if (etc.headers) {\n                headers = mergeObjects(headers, etc.headers);\n            }\n            var results = getInputValues(elt, verb);\n            var errors = results.errors;\n            var rawParameters = results.values;\n            if (etc.values) {\n                rawParameters = mergeObjects(rawParameters, etc.values);\n            }\n            var expressionVars = getExpressionVars(elt);\n            var allParameters = mergeObjects(rawParameters, expressionVars);\n            var filteredParameters = filterValues(allParameters, elt);\n\n            if (verb !== 'get' && !usesFormData(elt)) {\n                headers['Content-Type'] = 'application/x-www-form-urlencoded';\n            }\n\n            if (htmx.config.getCacheBusterParam && verb === 'get') {\n                filteredParameters['org.htmx.cache-buster'] = getRawAttribute(target, \"id\") || \"true\";\n            }\n\n            // behavior of anchors w/ empty href is to use the current URL\n            if (path == null || path === \"\") {\n                path = getDocument().location.href;\n            }\n\n\n            var requestAttrValues = getValuesForElement(elt, 'hx-request');\n\n            var eltIsBoosted = getInternalData(elt).boosted;\n\n            var useUrlParams = htmx.config.methodsThatUseUrlParams.indexOf(verb) >= 0\n\n            var requestConfig = {\n                boosted: eltIsBoosted,\n                useUrlParams: useUrlParams,\n                parameters: filteredParameters,\n                unfilteredParameters: allParameters,\n                headers:headers,\n                target:target,\n                verb:verb,\n                errors:errors,\n                withCredentials: etc.credentials || requestAttrValues.credentials || htmx.config.withCredentials,\n                timeout:  etc.timeout || requestAttrValues.timeout || htmx.config.timeout,\n                path:path,\n                triggeringEvent:event\n            };\n\n            if(!triggerEvent(elt, 'htmx:configRequest', requestConfig)){\n                maybeCall(resolve);\n                endRequestLock();\n                return promise;\n            }\n\n            // copy out in case the object was overwritten\n            path = requestConfig.path;\n            verb = requestConfig.verb;\n            headers = requestConfig.headers;\n            filteredParameters = requestConfig.parameters;\n            errors = requestConfig.errors;\n            useUrlParams = requestConfig.useUrlParams;\n\n            if(errors && errors.length > 0){\n                triggerEvent(elt, 'htmx:validation:halted', requestConfig)\n                maybeCall(resolve);\n                endRequestLock();\n                return promise;\n            }\n\n            var splitPath = path.split(\"#\");\n            var pathNoAnchor = splitPath[0];\n            var anchor = splitPath[1];\n\n            var finalPath = path\n            if (useUrlParams) {\n                finalPath = pathNoAnchor;\n                var values = Object.keys(filteredParameters).length !== 0;\n                if (values) {\n                    if (finalPath.indexOf(\"?\") < 0) {\n                        finalPath += \"?\";\n                    } else {\n                        finalPath += \"&\";\n                    }\n                    finalPath += urlEncode(filteredParameters);\n                    if (anchor) {\n                        finalPath += \"#\" + anchor;\n                    }\n                }\n            }\n\n            if (!verifyPath(elt, finalPath, requestConfig)) {\n                triggerErrorEvent(elt, 'htmx:invalidPath', requestConfig)\n                return;\n            };\n\n            xhr.open(verb.toUpperCase(), finalPath, true);\n            xhr.overrideMimeType(\"text/html\");\n            xhr.withCredentials = requestConfig.withCredentials;\n            xhr.timeout = requestConfig.timeout;\n\n            // request headers\n            if (requestAttrValues.noHeaders) {\n                // ignore all headers\n            } else {\n                for (var header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        var headerValue = headers[header];\n                        safelySetHeaderValue(xhr, header, headerValue);\n                    }\n                }\n            }\n\n            var responseInfo = {\n                xhr: xhr, target: target, requestConfig: requestConfig, etc: etc, boosted: eltIsBoosted,\n                pathInfo: {\n                    requestPath: path,\n                    finalRequestPath: finalPath,\n                    anchor: anchor\n                }\n            };\n\n            xhr.onload = function () {\n                try {\n                    var hierarchy = hierarchyForElt(elt);\n                    responseInfo.pathInfo.responsePath = getPathFromResponse(xhr);\n                    responseHandler(elt, responseInfo);\n                    removeRequestIndicatorClasses(indicators);\n                    triggerEvent(elt, 'htmx:afterRequest', responseInfo);\n                    triggerEvent(elt, 'htmx:afterOnLoad', responseInfo);\n                    // if the body no longer contains the element, trigger the event on the closest parent\n                    // remaining in the DOM\n                    if (!bodyContains(elt)) {\n                        var secondaryTriggerElt = null;\n                        while (hierarchy.length > 0 && secondaryTriggerElt == null) {\n                            var parentEltInHierarchy = hierarchy.shift();\n                            if (bodyContains(parentEltInHierarchy)) {\n                                secondaryTriggerElt = parentEltInHierarchy;\n                            }\n                        }\n                        if (secondaryTriggerElt) {\n                            triggerEvent(secondaryTriggerElt, 'htmx:afterRequest', responseInfo);\n                            triggerEvent(secondaryTriggerElt, 'htmx:afterOnLoad', responseInfo);\n                        }\n                    }\n                    maybeCall(resolve);\n                    endRequestLock();\n                } catch (e) {\n                    triggerErrorEvent(elt, 'htmx:onLoadError', mergeObjects({error:e}, responseInfo));\n                    throw e;\n                }\n            }\n            xhr.onerror = function () {\n                removeRequestIndicatorClasses(indicators);\n                triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo);\n                triggerErrorEvent(elt, 'htmx:sendError', responseInfo);\n                maybeCall(reject);\n                endRequestLock();\n            }\n            xhr.onabort = function() {\n                removeRequestIndicatorClasses(indicators);\n                triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo);\n                triggerErrorEvent(elt, 'htmx:sendAbort', responseInfo);\n                maybeCall(reject);\n                endRequestLock();\n            }\n            xhr.ontimeout = function() {\n                removeRequestIndicatorClasses(indicators);\n                triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo);\n                triggerErrorEvent(elt, 'htmx:timeout', responseInfo);\n                maybeCall(reject);\n                endRequestLock();\n            }\n            if(!triggerEvent(elt, 'htmx:beforeRequest', responseInfo)){\n                maybeCall(resolve);\n                endRequestLock()\n                return promise\n            }\n            var indicators = addRequestIndicatorClasses(elt);\n\n            forEach(['loadstart', 'loadend', 'progress', 'abort'], function(eventName) {\n                forEach([xhr, xhr.upload], function (target) {\n                    target.addEventListener(eventName, function(event){\n                        triggerEvent(elt, \"htmx:xhr:\" + eventName, {\n                            lengthComputable:event.lengthComputable,\n                            loaded:event.loaded,\n                            total:event.total\n                        });\n                    })\n                });\n            });\n            triggerEvent(elt, 'htmx:beforeSend', responseInfo);\n            var params = useUrlParams ? null : encodeParamsForBody(xhr, elt, filteredParameters)\n            xhr.send(params);\n            return promise;\n        }\n\n        function determineHistoryUpdates(elt, responseInfo) {\n\n            var xhr = responseInfo.xhr;\n\n            //===========================================\n            // First consult response headers\n            //===========================================\n            var pathFromHeaders = null;\n            var typeFromHeaders = null;\n            if (hasHeader(xhr,/HX-Push:/i)) {\n                pathFromHeaders = xhr.getResponseHeader(\"HX-Push\");\n                typeFromHeaders = \"push\";\n            } else if (hasHeader(xhr,/HX-Push-Url:/i)) {\n                pathFromHeaders = xhr.getResponseHeader(\"HX-Push-Url\");\n                typeFromHeaders = \"push\";\n            } else if (hasHeader(xhr,/HX-Replace-Url:/i)) {\n                pathFromHeaders = xhr.getResponseHeader(\"HX-Replace-Url\");\n                typeFromHeaders = \"replace\";\n            }\n\n            // if there was a response header, that has priority\n            if (pathFromHeaders) {\n                if (pathFromHeaders === \"false\") {\n                    return {}\n                } else {\n                    return {\n                        type: typeFromHeaders,\n                        path : pathFromHeaders\n                    }\n                }\n            }\n\n            //===========================================\n            // Next resolve via DOM values\n            //===========================================\n            var requestPath =  responseInfo.pathInfo.finalRequestPath;\n            var responsePath =  responseInfo.pathInfo.responsePath;\n\n            var pushUrl = getClosestAttributeValue(elt, \"hx-push-url\");\n            var replaceUrl = getClosestAttributeValue(elt, \"hx-replace-url\");\n            var elementIsBoosted = getInternalData(elt).boosted;\n\n            var saveType = null;\n            var path = null;\n\n            if (pushUrl) {\n                saveType = \"push\";\n                path = pushUrl;\n            } else if (replaceUrl) {\n                saveType = \"replace\";\n                path = replaceUrl;\n            } else if (elementIsBoosted) {\n                saveType = \"push\";\n                path = responsePath || requestPath; // if there is no response path, go with the original request path\n            }\n\n            if (path) {\n                // false indicates no push, return empty object\n                if (path === \"false\") {\n                    return {};\n                }\n\n                // true indicates we want to follow wherever the server ended up sending us\n                if (path === \"true\") {\n                    path = responsePath || requestPath; // if there is no response path, go with the original request path\n                }\n\n                // restore any anchor associated with the request\n                if (responseInfo.pathInfo.anchor &&\n                    path.indexOf(\"#\") === -1) {\n                    path = path + \"#\" + responseInfo.pathInfo.anchor;\n                }\n\n                return {\n                    type:saveType,\n                    path: path\n                }\n            } else {\n                return {};\n            }\n        }\n\n        function handleAjaxResponse(elt, responseInfo) {\n            var xhr = responseInfo.xhr;\n            var target = responseInfo.target;\n            var etc = responseInfo.etc;\n\n            if (!triggerEvent(elt, 'htmx:beforeOnLoad', responseInfo)) return;\n\n            if (hasHeader(xhr, /HX-Trigger:/i)) {\n                handleTrigger(xhr, \"HX-Trigger\", elt);\n            }\n\n            if (hasHeader(xhr, /HX-Location:/i)) {\n                saveCurrentPageToHistory();\n                var redirectPath = xhr.getResponseHeader(\"HX-Location\");\n                var swapSpec;\n                if (redirectPath.indexOf(\"{\") === 0) {\n                    swapSpec = parseJSON(redirectPath);\n                    // what's the best way to throw an error if the user didn't include this\n                    redirectPath = swapSpec['path'];\n                    delete swapSpec['path'];\n                }\n                ajaxHelper('GET', redirectPath, swapSpec).then(function(){\n                    pushUrlIntoHistory(redirectPath);\n                });\n                return;\n            }\n\n            if (hasHeader(xhr, /HX-Redirect:/i)) {\n                location.href = xhr.getResponseHeader(\"HX-Redirect\");\n                return;\n            }\n\n            if (hasHeader(xhr,/HX-Refresh:/i)) {\n                if (\"true\" === xhr.getResponseHeader(\"HX-Refresh\")) {\n                    location.reload();\n                    return;\n                }\n            }\n\n            if (hasHeader(xhr,/HX-Retarget:/i)) {\n                responseInfo.target = getDocument().querySelector(xhr.getResponseHeader(\"HX-Retarget\"));\n            }\n\n            var historyUpdate = determineHistoryUpdates(elt, responseInfo);\n\n            // by default htmx only swaps on 200 return codes and does not swap\n            // on 204 'No Content'\n            // this can be ovverriden by responding to the htmx:beforeSwap event and\n            // overriding the detail.shouldSwap property\n            var shouldSwap = xhr.status >= 200 && xhr.status < 400 && xhr.status !== 204;\n            var serverResponse = xhr.response;\n            var isError = xhr.status >= 400;\n            var beforeSwapDetails = mergeObjects({shouldSwap: shouldSwap, serverResponse:serverResponse, isError:isError}, responseInfo);\n            if (!triggerEvent(target, 'htmx:beforeSwap', beforeSwapDetails)) return;\n\n            target = beforeSwapDetails.target; // allow re-targeting\n            serverResponse = beforeSwapDetails.serverResponse; // allow updating content\n            isError = beforeSwapDetails.isError; // allow updating error\n\n            responseInfo.target = target; // Make updated target available to response events\n            responseInfo.failed = isError; // Make failed property available to response events\n            responseInfo.successful = !isError; // Make successful property available to response events\n\n            if (beforeSwapDetails.shouldSwap) {\n                if (xhr.status === 286) {\n                    cancelPolling(elt);\n                }\n\n                withExtensions(elt, function (extension) {\n                    serverResponse = extension.transformResponse(serverResponse, xhr, elt);\n                });\n\n                // Save current page if there will be a history update\n                if (historyUpdate.type) {\n                    saveCurrentPageToHistory();\n                }\n\n                var swapOverride = etc.swapOverride;\n                if (hasHeader(xhr,/HX-Reswap:/i)) {\n                    swapOverride = xhr.getResponseHeader(\"HX-Reswap\");\n                }\n                var swapSpec = getSwapSpecification(elt, swapOverride);\n\n                target.classList.add(htmx.config.swappingClass);\n\n                // optional transition API promise callbacks\n                var settleResolve = null;\n                var settleReject = null;\n\n                var doSwap = function () {\n                    try {\n                        var activeElt = document.activeElement;\n                        var selectionInfo = {};\n                        try {\n                            selectionInfo = {\n                                elt: activeElt,\n                                // @ts-ignore\n                                start: activeElt ? activeElt.selectionStart : null,\n                                // @ts-ignore\n                                end: activeElt ? activeElt.selectionEnd : null\n                            };\n                        } catch (e) {\n                            // safari issue - see https://github.com/microsoft/playwright/issues/5894\n                        }\n\n                        var selectOverride;\n                        if (hasHeader(xhr, /HX-Reselect:/i)) {\n                            selectOverride = xhr.getResponseHeader(\"HX-Reselect\");\n                        }\n\n                        var settleInfo = makeSettleInfo(target);\n                        selectAndSwap(swapSpec.swapStyle, target, elt, serverResponse, settleInfo, selectOverride);\n\n                        if (selectionInfo.elt &&\n                            !bodyContains(selectionInfo.elt) &&\n                            getRawAttribute(selectionInfo.elt, \"id\")) {\n                            var newActiveElt = document.getElementById(getRawAttribute(selectionInfo.elt, \"id\"));\n                            var focusOptions = { preventScroll: swapSpec.focusScroll !== undefined ? !swapSpec.focusScroll : !htmx.config.defaultFocusScroll };\n                            if (newActiveElt) {\n                                // @ts-ignore\n                                if (selectionInfo.start && newActiveElt.setSelectionRange) {\n                                    // @ts-ignore\n                                    try {\n                                        newActiveElt.setSelectionRange(selectionInfo.start, selectionInfo.end);\n                                    } catch (e) {\n                                        // the setSelectionRange method is present on fields that don't support it, so just let this fail\n                                    }\n                                }\n                                newActiveElt.focus(focusOptions);\n                            }\n                        }\n\n                        target.classList.remove(htmx.config.swappingClass);\n                        forEach(settleInfo.elts, function (elt) {\n                            if (elt.classList) {\n                                elt.classList.add(htmx.config.settlingClass);\n                            }\n                            triggerEvent(elt, 'htmx:afterSwap', responseInfo);\n                        });\n\n                        if (hasHeader(xhr, /HX-Trigger-After-Swap:/i)) {\n                            var finalElt = elt;\n                            if (!bodyContains(elt)) {\n                                finalElt = getDocument().body;\n                            }\n                            handleTrigger(xhr, \"HX-Trigger-After-Swap\", finalElt);\n                        }\n\n                        var doSettle = function () {\n                            forEach(settleInfo.tasks, function (task) {\n                                task.call();\n                            });\n                            forEach(settleInfo.elts, function (elt) {\n                                if (elt.classList) {\n                                    elt.classList.remove(htmx.config.settlingClass);\n                                }\n                                triggerEvent(elt, 'htmx:afterSettle', responseInfo);\n                            });\n\n                            // if we need to save history, do so\n                            if (historyUpdate.type) {\n                                if (historyUpdate.type === \"push\") {\n                                    pushUrlIntoHistory(historyUpdate.path);\n                                    triggerEvent(getDocument().body, 'htmx:pushedIntoHistory', {path: historyUpdate.path});\n                                } else {\n                                    replaceUrlInHistory(historyUpdate.path);\n                                    triggerEvent(getDocument().body, 'htmx:replacedInHistory', {path: historyUpdate.path});\n                                }\n                            }\n                            if (responseInfo.pathInfo.anchor) {\n                                var anchorTarget = find(\"#\" + responseInfo.pathInfo.anchor);\n                                if(anchorTarget) {\n                                    anchorTarget.scrollIntoView({block:'start', behavior: \"auto\"});\n                                }\n                            }\n\n                            if(settleInfo.title) {\n                                var titleElt = find(\"title\");\n                                if(titleElt) {\n                                    titleElt.innerHTML = settleInfo.title;\n                                } else {\n                                    window.document.title = settleInfo.title;\n                                }\n                            }\n\n                            updateScrollState(settleInfo.elts, swapSpec);\n\n                            if (hasHeader(xhr, /HX-Trigger-After-Settle:/i)) {\n                                var finalElt = elt;\n                                if (!bodyContains(elt)) {\n                                    finalElt = getDocument().body;\n                                }\n                                handleTrigger(xhr, \"HX-Trigger-After-Settle\", finalElt);\n                            }\n                            maybeCall(settleResolve);\n                        }\n\n                        if (swapSpec.settleDelay > 0) {\n                            setTimeout(doSettle, swapSpec.settleDelay)\n                        } else {\n                            doSettle();\n                        }\n                    } catch (e) {\n                        triggerErrorEvent(elt, 'htmx:swapError', responseInfo);\n                        maybeCall(settleReject);\n                        throw e;\n                    }\n                };\n\n                var shouldTransition = htmx.config.globalViewTransitions\n                if(swapSpec.hasOwnProperty('transition')){\n                    shouldTransition = swapSpec.transition;\n                }\n\n                if(shouldTransition &&\n                    triggerEvent(elt, 'htmx:beforeTransition', responseInfo) &&\n                    typeof Promise !== \"undefined\" && document.startViewTransition){\n                    var settlePromise = new Promise(function (_resolve, _reject) {\n                        settleResolve = _resolve;\n                        settleReject = _reject;\n                    });\n                    // wrap the original doSwap() in a call to startViewTransition()\n                    var innerDoSwap = doSwap;\n                    doSwap = function() {\n                        document.startViewTransition(function () {\n                            innerDoSwap();\n                            return settlePromise;\n                        });\n                    }\n                }\n\n\n                if (swapSpec.swapDelay > 0) {\n                    setTimeout(doSwap, swapSpec.swapDelay)\n                } else {\n                    doSwap();\n                }\n            }\n            if (isError) {\n                triggerErrorEvent(elt, 'htmx:responseError', mergeObjects({error: \"Response Status Error Code \" + xhr.status + \" from \" + responseInfo.pathInfo.requestPath}, responseInfo));\n            }\n        }\n\n        //====================================================================\n        // Extensions API\n        //====================================================================\n\n        /** @type {Object<string, import(\"./htmx\").HtmxExtension>} */\n        var extensions = {};\n\n        /**\n         * extensionBase defines the default functions for all extensions.\n         * @returns {import(\"./htmx\").HtmxExtension}\n         */\n        function extensionBase() {\n            return {\n                init: function(api) {return null;},\n                onEvent : function(name, evt) {return true;},\n                transformResponse : function(text, xhr, elt) {return text;},\n                isInlineSwap : function(swapStyle) {return false;},\n                handleSwap : function(swapStyle, target, fragment, settleInfo) {return false;},\n                encodeParameters : function(xhr, parameters, elt) {return null;}\n            }\n        }\n\n        /**\n         * defineExtension initializes the extension and adds it to the htmx registry\n         *\n         * @param {string} name\n         * @param {import(\"./htmx\").HtmxExtension} extension\n         */\n        function defineExtension(name, extension) {\n            if(extension.init) {\n                extension.init(internalAPI)\n            }\n            extensions[name] = mergeObjects(extensionBase(), extension);\n        }\n\n        /**\n         * removeExtension removes an extension from the htmx registry\n         *\n         * @param {string} name\n         */\n        function removeExtension(name) {\n            delete extensions[name];\n        }\n\n        /**\n         * getExtensions searches up the DOM tree to return all extensions that can be applied to a given element\n         *\n         * @param {HTMLElement} elt\n         * @param {import(\"./htmx\").HtmxExtension[]=} extensionsToReturn\n         * @param {import(\"./htmx\").HtmxExtension[]=} extensionsToIgnore\n         */\n         function getExtensions(elt, extensionsToReturn, extensionsToIgnore) {\n\n            if (elt == undefined) {\n                return extensionsToReturn;\n            }\n            if (extensionsToReturn == undefined) {\n                extensionsToReturn = [];\n            }\n            if (extensionsToIgnore == undefined) {\n                extensionsToIgnore = [];\n            }\n            var extensionsForElement = getAttributeValue(elt, \"hx-ext\");\n            if (extensionsForElement) {\n                forEach(extensionsForElement.split(\",\"), function(extensionName){\n                    extensionName = extensionName.replace(/ /g, '');\n                    if (extensionName.slice(0, 7) == \"ignore:\") {\n                        extensionsToIgnore.push(extensionName.slice(7));\n                        return;\n                    }\n                    if (extensionsToIgnore.indexOf(extensionName) < 0) {\n                        var extension = extensions[extensionName];\n                        if (extension && extensionsToReturn.indexOf(extension) < 0) {\n                            extensionsToReturn.push(extension);\n                        }\n                    }\n                });\n            }\n            return getExtensions(parentElt(elt), extensionsToReturn, extensionsToIgnore);\n        }\n\n        //====================================================================\n        // Initialization\n        //====================================================================\n        var isReady = false\n        getDocument().addEventListener('DOMContentLoaded', function() {\n            isReady = true\n        })\n\n        /**\n         * Execute a function now if DOMContentLoaded has fired, otherwise listen for it.\n         *\n         * This function uses isReady because there is no realiable way to ask the browswer whether\n         * the DOMContentLoaded event has already been fired; there's a gap between DOMContentLoaded\n         * firing and readystate=complete.\n         */\n        function ready(fn) {\n            // Checking readyState here is a failsafe in case the htmx script tag entered the DOM by\n            // some means other than the initial page load.\n            if (isReady || getDocument().readyState === 'complete') {\n                fn();\n            } else {\n                getDocument().addEventListener('DOMContentLoaded', fn);\n            }\n        }\n\n        function insertIndicatorStyles() {\n            if (htmx.config.includeIndicatorStyles !== false) {\n                getDocument().head.insertAdjacentHTML(\"beforeend\",\n                    \"<style>\\\n                      .\" + htmx.config.indicatorClass + \"{opacity:0;transition: opacity 200ms ease-in;}\\\n                      .\" + htmx.config.requestClass + \" .\" + htmx.config.indicatorClass + \"{opacity:1}\\\n                      .\" + htmx.config.requestClass + \".\" + htmx.config.indicatorClass + \"{opacity:1}\\\n                    </style>\");\n            }\n        }\n\n        function getMetaConfig() {\n            var element = getDocument().querySelector('meta[name=\"htmx-config\"]');\n            if (element) {\n                // @ts-ignore\n                return parseJSON(element.content);\n            } else {\n                return null;\n            }\n        }\n\n        function mergeMetaConfig() {\n            var metaConfig = getMetaConfig();\n            if (metaConfig) {\n                htmx.config = mergeObjects(htmx.config , metaConfig)\n            }\n        }\n\n        // initialize the document\n        ready(function () {\n            mergeMetaConfig();\n            insertIndicatorStyles();\n            var body = getDocument().body;\n            processNode(body);\n            var restoredElts = getDocument().querySelectorAll(\n                \"[hx-trigger='restored'],[data-hx-trigger='restored']\"\n            );\n            body.addEventListener(\"htmx:abort\", function (evt) {\n                var target = evt.target;\n                var internalData = getInternalData(target);\n                if (internalData && internalData.xhr) {\n                    internalData.xhr.abort();\n                }\n            });\n            var originalPopstate = window.onpopstate;\n            window.onpopstate = function (event) {\n                if (event.state && event.state.htmx) {\n                    restoreHistory();\n                    forEach(restoredElts, function(elt){\n                        triggerEvent(elt, 'htmx:restored', {\n                            'document': getDocument(),\n                            'triggerEvent': triggerEvent\n                        });\n                    });\n                } else {\n                    if (originalPopstate) {\n                        originalPopstate(event);\n                    }\n                }\n            };\n            setTimeout(function () {\n                triggerEvent(body, 'htmx:load', {}); // give ready handlers a chance to load up before firing this event\n                body = null; // kill reference for gc\n            }, 0);\n        })\n\n        return htmx;\n    }\n)()\n}));\n", "import htmx from \"htmx/htmx.js\";\nwindow.htmx = htmx;\n", "(function () {\n  const EXT_NAME = \"css-rules\";\n\n  htmx.config.cssRules = {\n    defaultDelay: htmx.config.defaultSettleDelay,\n    pseudoClass: \"htmx-pseudo\",\n    customProps: [\n      \"--name\",\n      \"--value\",\n      // \"--ws-connect\",\n      // \"--ws-send\",\n      // \"--sse-connect\",\n      // \"--sse-swap\",\n    ],\n    maxLoopCount: 10,\n  };\n\n  let api;\n\n  htmx.defineExtension(EXT_NAME, {\n    init(api_) {\n      api = api_;\n\n      let handle = null;\n      function debounced() {\n        clearTimeout(handle);\n        handle = setTimeout(\n          applyRules,\n          htmx.config.cssRules.defaultDelay,\n        );\n      }\n\n      [\n        \"DOMContentLoaded\",\n        \"load\",\n        \"htmx:load\",\n        \"htmx:afterSettle\",\n        \"htmx:mutation\",\n        \"htmx:afterCssImport\",\n        \"htmx:applyCssRules\",\n      ]\n        .forEach((event) => {\n          addEventListener(event, debounced);\n        });\n    },\n  });\n\n  function isOurProp(prop) {\n    return prop.startsWith(\"--hx-\") || prop.startsWith(\"--data-\") ||\n      prop.startsWith(\"--css-rule-\") ||\n      htmx.config.cssRules.customProps.includes(prop);\n  }\n\n  function parseValue({ rule, style, prop, elt }) {\n    let value = (style ?? rule.style).getPropertyValue(prop)?.trim();\n    let delim = undefined;\n\n    if (value) {\n      // match: --append(<delim?>) *\n      const isAppend = /^--append\\(([^\\)]*)\\)\\s+(.+)$/.exec(value);\n      if (isAppend) {\n        delim = isAppend[1] ? parseQuoted(isAppend[1]) : \" \";\n        value = isAppend[2];\n      }\n\n      // match: attr(<name> <type?>)\n      const isAttr = /^attr\\(([^\\)\\s,]+)(?:\\s+([^\\)\\s,]+))?\\)$/.exec(value);\n      if (isAttr) {\n        value = elt.getAttribute(isAttr[1]);\n        if (isAttr[2] === \"url\") {\n          value = new URL(value, elt.baseURI).href;\n        }\n        return [value, delim];\n      } else {\n        // match: --prop(<name> <type?>)\n        const isProp = /^--prop\\(([^\\)\\s,]+)(?:\\s+([^\\)\\s,]+))?\\)$/.exec(value);\n        if (isProp) {\n          value = elt[isProp[1]];\n          if (isProp[2] === \"url\" && typeof value === \"string\") {\n            value = new URL(value, elt.baseURI).href;\n          } else if (\n            !(typeof value === \"string\" || typeof value === \"number\" ||\n              typeof value === \"boolean\")\n          ) {\n            value = undefined;\n          }\n          return [value, delim];\n        }\n      }\n\n      // match: url(<url?>)\n      const isURL = /^url\\(([^\\)]*)\\)$/.exec(value);\n      if (isURL) {\n        value = isURL[1];\n      }\n\n      value = parseQuoted(value);\n\n      if (isURL) {\n        value = new URL(value, rule.parentStyleSheet.href).href;\n      }\n    }\n\n    return [value, delim];\n  }\n\n  function parseQuoted(value) {\n    // match: \"<string?>\" or '<string?>'\n    const isQuoted = /^\\\"([^\\\"]*)\\\"$/.exec(value) ??\n      /^\\'([^\\']*)\\'$/.exec(value);\n    if (isQuoted) {\n      return isQuoted[1];\n    }\n    return value;\n  }\n\n  function findRules() {\n    const cssRules = new Map(); // CSSStyleRule -> Set<props>\n\n    function fromStylesheet(stylesheet) {\n      if (!stylesheet.disabled) {\n        try {\n          fromRules(stylesheet.cssRules);\n        } catch {\n          // Skip SecurityError\n        }\n      }\n    }\n\n    function fromRules(rules) {\n      for (const rule of rules) {\n        if (rule instanceof CSSImportRule) {\n          fromStylesheet(rule.styleSheet);\n        } else if (rule instanceof CSSGroupingRule) {\n          fromRules(rule.cssRules);\n        } else if (rule instanceof CSSStyleRule) {\n          fromStyleRule(rule);\n        }\n      }\n    }\n\n    function fromStyleRule(rule) {\n      const props = new Set();\n      for (const prop of rule.style) {\n        if (isOurProp(prop)) {\n          props.add(prop);\n        }\n      }\n      if (props.size > 0) {\n        cssRules.set(rule, props);\n      }\n    }\n\n    for (const stylesheet of document.styleSheets) {\n      fromStylesheet(stylesheet);\n    }\n\n    return cssRules;\n  }\n\n  let nextPseudoId = 1;\n\n  function applyRules() {\n    if (\n      !document.querySelector(\n        `[hx-ext*=\"${EXT_NAME}\"], [data-hx-ext*=\"${EXT_NAME}]`,\n      )\n    ) {\n      // Extension isn't referenced anywhere in the document\n      return;\n    }\n\n    let hasPseudoElements = false;\n    let hasAttributes = false;\n    let hasToggledImports = false;\n    let detail;\n    let loop = 0;\n\n    do {\n      if (loop === 0 || hasPseudoElements) {\n        detail = {\n          cssRules: findRules(),\n        };\n\n        if (\n          !htmx.trigger(document, \"htmx:beforeApplyCssRules\", detail)\n        ) {\n          return;\n        }\n      }\n\n      const cssRules = detail.cssRules;\n\n      console.debug(\"applyRules loop:\", loop);\n\n      let hasNewImports = false;\n\n      for (const [rule, props] of cssRules) {\n        switch (initCssImports(rule, props)) {\n          case \"created\":\n            hasNewImports = true;\n            break;\n          case \"enabled\":\n          case \"disabled\":\n            hasToggledImports = true;\n            break;\n        }\n      }\n\n      if (hasNewImports) {\n        // Abort further processing, allowing new stylesheets to be loaded\n        // Css rules will be re-applied once new stylesheets have loaded\n        return;\n      }\n\n      hasPseudoElements = false;\n      for (const [rule] of cssRules) {\n        if (initPseudoElements(rule)) {\n          hasPseudoElements = true;\n        }\n      }\n\n      hasAttributes = false;\n      for (const [rule, props] of cssRules) {\n        if (applyAttributes(rule, props)) {\n          hasAttributes = true;\n        }\n      }\n\n      loop++;\n    } while (\n      loop < htmx.config.cssRules.maxLoopCount &&\n      (hasAttributes || hasPseudoElements || hasToggledImports)\n    );\n\n    htmx.trigger(document, \"htmx:afterApplyCssRules\", detail);\n\n    if (loop === htmx.config.cssRules.maxLoopCount) {\n      console.error(\"htmx css-rules ext: exceeded maximum loop count\", loop);\n    }\n  }\n\n  function* find(selector) {\n    for (const element of document.querySelectorAll(selector)) {\n      if (isCssRulesEnabled(element)) {\n        yield element;\n      }\n    }\n  }\n\n  function initPseudoElements(rule) {\n    // TODO: better selectorText parsing\n    const before = rule.selectorText.includes(\"::before\");\n    const after = before ? false : rule.selectorText.includes(\"::after\");\n\n    let modified = false;\n\n    if (before || after) {\n      const pseudoId = rule.htmxPseudoId || nextPseudoId++;\n      const place = before ? \"before\" : \"after\";\n      const parentSelector = rule.selectorText.replace(`::${place}`, \"\");\n\n      for (const elt of find(parentSelector)) {\n        // Insert a 'pseudo-element'\n        if (createPseudoElement(elt, pseudoId, place)) {\n          modified = true;\n        }\n      }\n\n      if (createPseudoRule(rule, pseudoId, place)) {\n        modified = true;\n      }\n    }\n\n    return modified;\n  }\n\n  function createPseudoElement(elt, pseudoId, place) {\n    const pseudoIdClass = `${htmx.config.cssRules.pseudoClass}-${pseudoId}`;\n\n    if (!elt.querySelector(`:scope > .${pseudoIdClass}`)) {\n      const parentTag = elt.localName;\n\n      // TODO: Pick appropriate tag for other types of parent too\n      const pseudoTag = [\"ul\", \"ol\", \"menu\"].includes(parentTag)\n        ? \"li\"\n        : \"span\";\n\n      const placeClass = `${htmx.config.cssRules.pseudoClass}-${place}`;\n\n      const pseudoElt = document.createElement(pseudoTag);\n      pseudoElt.setAttribute(\n        \"class\",\n        `${htmx.config.cssRules.pseudoClass} ${placeClass} ${pseudoIdClass}`,\n      );\n\n      const detail = {\n        pseudoElt,\n        pseudoId,\n        place,\n      };\n\n      if (htmx.trigger(elt, \"htmx:beforePseudoElement\", detail)) {\n        const place = detail.place === \"before\" ? \"afterBegin\" : \"beforeEnd\";\n        elt.insertAdjacentElement(place, detail.pseudoElt);\n        htmx.trigger(elt, \"htmx:afterPseudoElement\", detail);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function createPseudoRule(rule, pseudoId, place) {\n    if (!rule.htmxPseudoId) {\n      // Create a 'pseudo-rule' to target the 'pseudo-element'\n      rule.htmxPseudoId = pseudoId;\n\n      const pseudoIdClass = `${htmx.config.cssRules.pseudoClass}-${pseudoId}`;\n\n      const selectorText = rule.selectorText.replace(\n        `::${place}`,\n        ` > .${pseudoIdClass}`,\n      );\n      const cssText = rule.cssText.replace(rule.selectorText, selectorText);\n      const pseudoRule = {\n        selectorText,\n        cssText,\n        parentStyleSheet: rule.parentStyleSheet,\n      };\n\n      const detail = {\n        pseudoId,\n        pseudoRule,\n        rule,\n        place,\n      };\n\n      if (htmx.trigger(document, \"htmx:beforePseudoRule\", detail)) {\n        const styleSheet = detail.pseudoRule.parentStyleSheet;\n        const cssRules = styleSheet.cssRules;\n        styleSheet.insertRule(detail.pseudoRule.cssText, cssRules.length);\n        htmx.trigger(document, \"htmx:afterPseudoRule\", {\n          ...detail,\n          pseudoRule: cssRules[cssRules.length - 1],\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function initCssImports(rule, props) {\n    let imported = false;\n    for (const prop of props) {\n      if (\n        prop === \"--css-rule-import\" || prop.startsWith(\"--css-rule-import-\")\n      ) {\n        if (!rule.hxCssRulesImportLinks) {\n          rule.hxCssRulesImportLinks = {};\n        }\n\n        let link = rule.hxCssRulesImportLinks[prop];\n        let ruleApplies = false;\n\n        for (const elt of find(rule.selectorText)) {\n          // TODO: consider getting computed style so that media queries are applied\n          // and/or allow media-queries to be appended to the prop value, like `@import`\n\n          const [url] = parseValue({ rule, prop, elt });\n\n          if (url) {\n            ruleApplies = true;\n            if (link) {\n              if (link.sheet && link.sheet.disabled) {\n                link.sheet.disabled = false;\n                imported = \"enabled\";\n              }\n              break;\n            } else {\n              link = createStyleSheetLink(\n                url,\n                rule.parentStyleSheet?.ownerNode?.crossOrigin,\n              );\n\n              if (link) {\n                rule.hxCssRulesImportLinks[prop] = link;\n                imported = \"created\";\n                break;\n              }\n            }\n          }\n        }\n\n        if (!ruleApplies && link && link.sheet && !link.sheet.disabled) {\n          link.sheet.disabled = true;\n          imported = \"disabled\";\n        }\n      }\n    }\n    return imported;\n  }\n\n  function createStyleSheetLink(url, crossOrigin) {\n    const detail = { url, crossOrigin, disabled: false };\n\n    if (htmx.trigger(document, \"htmx:beforeCssImport\", detail)) {\n      if (\n        !document.querySelector(`link[rel=\"stylesheet\"][href=\"${detail.url}\"]`)\n      ) {\n        const link = document.createElement(\"link\");\n        link.setAttribute(\"rel\", \"stylesheet\");\n        link.setAttribute(\"href\", detail.url);\n\n        if (typeof detail.crossOrigin === \"string\") {\n          link.setAttribute(\"crossorigin\", detail.crossOrigin);\n        }\n\n        link.addEventListener(\"load\", (event) => {\n          htmx.trigger(event.target, \"htmx:afterCssImport\", detail);\n        }, { once: true, passive: true });\n\n        document.head.appendChild(link);\n        return link;\n      }\n    }\n  }\n\n  function applyAttributes(rule, props) {\n    const detailsQueue = [];\n\n    for (const elt of find(rule.selectorText)) {\n      if (elt.matches(rule.selectorText)) {\n        const targets = findElements(elt, rule, \"--css-rule-target\");\n\n        if (targets.length) {\n          const sources = findElements(elt, rule, \"--css-rule-source\");\n          // console.groupCollapsed(\"CSSRULE\", rule.selectorText);\n          // console.log(\"CSSRULE TARGETS\", ...targets);\n          // console.log(\"CSSRULE SOURCES\", ...sources);\n\n          for (const source of sources) {\n            let style = source instanceof Element\n              ? getComputedStyle(source)\n              : source === \"rule\"\n              ? rule.style\n              : undefined;\n\n            if (style || source === \"target\") {\n              for (const target of targets) {\n                if (source === \"target\") {\n                  style = getComputedStyle(target);\n                }\n\n                const attrs = new Map();\n\n                for (const prop of props) {\n                  if (!prop.startsWith(\"--css-rule-\")) {\n                    let [value, delim] = parseValue({\n                      rule,\n                      style,\n                      prop,\n                      elt: source === \"target\" ? target : source,\n                    });\n\n                    if (value) {\n                      const isImportant =\n                        style.getPropertyPriority(prop) === \"important\";\n                      const attr = prop.replace(/^--/, \"\");\n\n                      if (typeof delim === \"string\") {\n                        const existingValue = target.getAttribute(attr);\n                        if (existingValue?.length) {\n                          if (existingValue.split(delim).includes(value)) {\n                            value = existingValue;\n                          } else {\n                            value = existingValue + delim + value;\n                          }\n                        }\n                      }\n\n                      if (\n                        (isImportant || typeof delim === \"string\" ||\n                          !target.hasAttribute(attr)) &&\n                        target.getAttribute(attr) !== value\n                      ) {\n                        attrs.set(attr, value);\n                      }\n                    }\n                  }\n                }\n\n                if (attrs.size) {\n                  const detail = {\n                    elt,\n                    rule,\n                    style,\n                    props,\n                    attrs,\n                    target,\n                    source,\n                  };\n\n                  if (\n                    htmx.trigger(elt, \"htmx:beforeApplyCssRule\", detail)\n                  ) {\n                    for (const [attr, value] of detail.attrs) {\n                      detail.target.setAttribute(attr, value);\n                    }\n\n                    detailsQueue.push(detail);\n                  }\n                }\n              }\n            }\n          }\n\n          // console.groupEnd();\n        }\n      }\n    }\n\n    const trigger = rule.style.getPropertyValue(\"--css-rule-trigger\")?.trim();\n    const triggerQueue = new Set();\n\n    for (const detail of detailsQueue) {\n      htmx.process(detail.target);\n      htmx.trigger(detail.elt, \"htmx:afterApplyCssRule\", detail);\n\n      if (trigger) {\n        triggerQueue.add(detail.target);\n      }\n    }\n\n    if (triggerQueue.size) {\n      setTimeout(() => {\n        for (const triggerTarget of triggerQueue) {\n          htmx.trigger(triggerTarget, trigger);\n        }\n      }, 0);\n    }\n\n    return detailsQueue.length > 0;\n  }\n\n  function findElements(elt, rule, prop) {\n    const [selector] = parseValue({ rule, prop, elt });\n    if (!selector || selector === \"this\") {\n      return [elt];\n    } else if (\n      prop === \"--css-rule-source\" &&\n      (selector === \"rule\" || selector === \"target\")\n    ) {\n      return [selector];\n    } else if (selector.startsWith(\"closest \")) {\n      return [htmx.closest(elt, selector.substr(8))];\n    } else if (selector.startsWith(\"find \")) {\n      return elt.querySelectorAll(selector.substr(5));\n    } else {\n      return document.querySelectorAll(selector);\n    }\n  }\n\n  function isCssRulesEnabled(elt) {\n    const exts = api.getAttributeValue(elt, \"hx-ext\")?.split(\",\");\n    if (exts?.includes(`ignore:${EXT_NAME}`)) {\n      return false;\n    } else if (exts?.includes(EXT_NAME)) {\n      return true;\n    }\n    return isCssRulesEnabled(elt.parentElement);\n  }\n\n  htmx.createStyleSheetLink = createStyleSheetLink;\n})();\n", "htmx.defineExtension(\"observe\", {\n  init(api) {\n    const ROOT_SELECTOR = \"[hx-observe], [data-hx-observe]\";\n\n    const observeRoots = new Set();\n    const blockedRoots = new Set();\n    let observer = null;\n\n    let htmxClasses = [];\n\n    function applyObservations() {\n      // Find the root element where this ext has been added\n      const newRoots = document.querySelectorAll(ROOT_SELECTOR);\n\n      const removeRoots = new Set(observeRoots);\n      const addRoots = new Map();\n      blockedRoots.clear();\n\n      for (const newRoot of newRoots) {\n        const observeAttr = api.getAttributeValue(newRoot, \"hx-observe\");\n        if (observeAttr === \"true\") {\n          removeRoots.delete(newRoot);\n          addRoots.set(newRoot, observeAttr);\n        } else if (observeAttr === \"false\") {\n          blockedRoots.add(newRoot);\n        }\n      }\n\n      if (observer && removeRoots.size > 0) {\n        // Disconnect the old observer\n        observer.disconnect();\n        observeRoots.clear();\n        for (const root of removeRoots) {\n          api.triggerEvent(root, \"htmx:afterStopObserve\");\n        }\n        removeRoots.clear();\n      }\n\n      if (addRoots.size > 0) {\n        // Start observing the new root elements\n\n        if (!observer) {\n          htmxClasses = [\n            htmx.config.indicatorClass,\n            htmx.config.requestClass,\n            htmx.config.addedClass,\n            htmx.config.settlingClass,\n            htmx.config.swappingClass,\n          ];\n\n          observer = new MutationObserver((mutations) => {\n            // Group mutations by closest root hx-observe\n            const groups = new Map();\n\n            for (const mutation of mutations) {\n              if (isFromHtmx(mutation)) continue;\n\n              const root = htmx.closest(mutation.target, ROOT_SELECTOR);\n              if (root && !blockedRoots.has(root)) {\n                let group = groups.get(root);\n                if (!group) {\n                  group = [];\n                  groups.set(root, group);\n                }\n                group.push(mutation);\n              }\n            }\n\n            // Emit a htmx:mutation event when mutations occur\n            for (const [root, mutations] of groups.entries()) {\n              api.triggerEvent(root, \"htmx:mutation\", { mutations });\n            }\n          });\n        }\n\n        for (const [root, _observeAttr] of addRoots.entries()) {\n          if (!observeRoots.has(root)) {\n            const detail = {\n              observeOptions: {\n                subtree: true,\n                childList: true,\n                attributes: true,\n                attributeOldValue: true,\n              },\n            };\n            if (api.triggerEvent(root, \"htmx:beforeStartObserve\", detail)) {\n              observer.observe(root, detail.observeOptions);\n              observeRoots.add(root);\n              api.triggerEvent(root, \"htmx:afterStartObserve\", detail);\n            }\n          }\n        }\n      }\n    }\n\n    function isFromHtmx(mutation) {\n      const a = mutation.attributeName;\n\n      if (a && (a.startsWith(\"hx-\") || a.startsWith(\"data-hx-\"))) return true;\n\n      if (a === \"class\") {\n        // Check whether class changes are just htmx classes\n        const o = mutation.oldValue?.split(/\\s+/) ?? [];\n        const n = [...mutation.target.classList];\n        const d = [\n          ...o.filter((c) => !n.includes(c)),\n          ...n.filter((c) => !o.includes(c)),\n        ].filter((c) => !htmxClasses.includes(c));\n        return d.length === 0;\n      }\n\n      if (!a && mutation.addedNodes.length) {\n        let count = mutation.addedNodes.length;\n        for (const node of mutation.addedNodes) {\n          // Ignore non-elements and nodes being added by htmx\n          if (\n            node.nodeType !== 1 ||\n            htmx.closest(node, `.${htmx.config.addedClass}`)\n          ) {\n            count--;\n          }\n        }\n        return count === 0;\n      }\n\n      return false;\n    }\n\n    document.addEventListener(\"htmx:afterProcessNode\", applyObservations);\n  },\n});\n", "(function () {\n  function applyDataUrl() {\n    const loc = window.location;\n    const root = document.documentElement;\n    if (root && root.getAttribute(\"data-url-href\") !== loc.href) {\n      root.setAttribute(\"data-url-href\", loc.href);\n      root.setAttribute(\"data-url-host\", loc.host);\n      root.setAttribute(\"data-url-path\", loc.pathname);\n      root.setAttribute(\"data-url-hash\", loc.hash);\n      // TODO: Expand search params to attributes\n    }\n  }\n\n  [\n    \"DOMContentLoaded\",\n    \"load\",\n    \"hashchange\",\n    \"popstate\",\n    \"htmx:load\",\n    \"htmx:beforeApplyCssRules\",\n  ]\n    .forEach((event) => {\n      addEventListener(event, applyDataUrl);\n    });\n\n  applyDataUrl();\n})();\n", "// Host app specific configuration for htmx\n\nhtmx.logAll();\n\nhtmx.config.allowEval = false;\n\nif (!htmx.config.allowOrigins) {\n  htmx.config.allowOrigins = [];\n}\n\nif (!htmx.config.allowOrigins.includes(document.location.origin)) {\n  htmx.config.allowOrigins.push(document.location.origin);\n}\n\nif (document.currentScript && document.currentScript.src) {\n  const scriptOrigin = new URL(document.currentScript.src).origin;\n  if (!htmx.config.allowOrigins.includes(scriptOrigin)) {\n    htmx.config.allowOrigins.push(scriptOrigin);\n  }\n}\n\n// Prevent any cross-origin htmx requests\naddEventListener(\"htmx:beforeRequest\", (event) => {\n  const path = event.detail.requestConfig.path;\n\n  // Allow an empty data url\n  if (path === \"data:,\") {\n    return;\n  }\n\n  const origin = new URL(path, document.baseURI).origin;\n\n  if (!htmx.config.allowOrigins.includes(origin)) {\n    console.error(\n      \"Attempt to perform cross-origin htmx request prevented:\",\n      path,\n      event,\n    );\n    event.preventDefault();\n  }\n});\n\n// Prevent any changes to htmx or it's config\nObject.freeze(htmx.config);\nObject.freeze(htmx.config.cssRules);\nObject.freeze(htmx);\nObject.defineProperty(window, \"htmx\", {\n  configurable: false,\n  enumerable: false,\n  writable: false,\n});\n"],
  "mappings": "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",
  "names": ["require_htmx", "__commonJSMin", "root", "factory", "elt", "type", "inputValues", "url", "sock", "verb", "str", "name", "qualifiedName", "condition", "initialElement", "ancestor", "attributeName", "attributeValue", "disinherit", "closestAttr", "e", "selector", "matchesFunction", "tagMatcher", "match", "resp", "depth", "parser", "responseDoc", "responseNode", "partialResponse", "documentFragment", "startTag", "func", "o", "dataProp", "data", "arr", "returnArr", "i", "el", "rect", "elemTop", "elemBottom", "trigger", "obj1", "obj2", "key", "jString", "error", "test", "path", "callback", "value", "evt", "event", "eltOrSelector", "delay", "clazz", "child", "trimmedSelector", "start", "results", "arg2", "arg1", "arg3", "eventArgs", "b", "attrName", "attrTarget", "result", "attribute", "targetStr", "attributesToSettle", "mergeTo", "mergeFrom", "attr", "swapStyle", "target", "extensions", "extension", "oobValue", "oobElement", "settleInfo", "targets", "fragment", "oobElementClone", "beforeSwapDetails", "oobSelects", "oobSelectValues", "oobSelectValue", "id", "preservedElt", "oldElt", "parentNode", "newNode", "normalizedId", "normalizedTag", "oldNode", "newAttributes", "autofocus", "autoFocusedElt", "insertBefore", "string", "hash", "char", "internalData", "handlerInfo", "element", "info", "newElt", "eltBeforeNewContent", "firstChild", "selectOverride", "newFragment", "node", "ext", "newElements", "j", "content", "contentWithSvgsRemoved", "responseText", "xhr", "header", "triggerBody", "triggers", "eventName", "detail", "eventNames", "tokens", "position", "startPosition", "startChar", "symbol", "token", "last", "paramName", "bracketCount", "conditionalSource", "conditionFunction", "explicitTrigger", "triggerSpecs", "initialLength", "every", "eventFilter", "triggerSpec", "from_arg", "handler", "spec", "nodeData", "rawAttribute", "explicitCancel", "elementData", "eltsToListenOn", "eltToListenOn", "eltToListenOnData", "eventListener", "eventData", "values", "wssSource", "retryCount", "base_part", "socket", "response", "children", "webSocketSourceElt", "parent", "webSocket", "headers", "errors", "rawParameters", "expressionVars", "allParameters", "filteredParameters", "exp", "maxDelay", "sseSrc", "source", "sseEventName", "sseSourceElt", "sseEventSource", "sseListener", "swapSpec", "load", "explicitAction", "observerOptions", "observer", "entries", "entry", "script", "newScript", "elements", "iter", "boostedElts", "form", "maybeSetLastButtonClicked", "line", "netCurlies", "code", "listener", "hxOnValue", "handlers", "lines", "currentEvent", "curlyCount", "hasExplicitHttpAction", "sseInfo", "wsInfo", "toDo", "msg", "eventResult", "kebabName", "kebabedEvent", "historyElt", "title", "scroll", "historyCache", "newHistoryItem", "className", "clone", "disableHistoryCache", "tasks", "task", "request", "details", "historyElement", "titleElt", "cached", "indicators", "ic", "processed", "current", "validate", "inputs", "input", "formValues", "button", "includes", "descendant", "returnStr", "realValue", "s", "v", "formData", "prompt", "paramsValue", "newValues", "swapInfoOverride", "swapInfo", "split", "modifier", "scrollSpec", "splitSpec", "scrollVal", "selectorVal", "showSpec", "showVal", "focusScrollVal", "encodedParameters", "first", "evalAsDefault", "evaluateValue", "varsValues", "toEval", "defaultVal", "headerValue", "regexp", "context", "requestConfig", "origin", "sameHost", "etc", "confirmed", "resolve", "reject", "promise", "_resolve", "_reject", "responseHandler", "issueRequest", "confirmDetails", "syncElt", "eltData", "syncStrategy", "queueStrategy", "abortable", "syncStrings", "queueStrArray", "endRequestLock", "queuedRequest", "promptQuestion", "promptResponse", "confirmQuestion", "requestAttrValues", "eltIsBoosted", "useUrlParams", "splitPath", "pathNoAnchor", "anchor", "finalPath", "responseInfo", "hierarchy", "secondaryTriggerElt", "parentEltInHierarchy", "params", "pathFromHeaders", "typeFromHeaders", "requestPath", "responsePath", "pushUrl", "replaceUrl", "elementIsBoosted", "saveType", "redirectPath", "historyUpdate", "shouldSwap", "serverResponse", "isError", "swapOverride", "settleResolve", "settleReject", "doSwap", "activeElt", "selectionInfo", "newActiveElt", "focusOptions", "finalElt", "doSettle", "anchorTarget", "shouldTransition", "settlePromise", "innerDoSwap", "api", "text", "parameters", "extensionsToReturn", "extensionsToIgnore", "extensionsForElement", "extensionName", "fn", "metaConfig", "body", "restoredElts", "originalPopstate", "import_htmx", "htmx", "EXT_NAME", "api", "api_", "handle", "debounced", "applyRules", "event", "isOurProp", "prop", "parseValue", "rule", "style", "elt", "value", "delim", "isAppend", "parseQuoted", "isAttr", "isProp", "isURL", "isQuoted", "findRules", "cssRules", "fromStylesheet", "stylesheet", "fromRules", "rules", "fromStyleRule", "props", "nextPseudoId", "hasPseudoElements", "hasAttributes", "hasToggledImports", "detail", "loop", "hasNewImports", "initCssImports", "initPseudoElements", "applyAttributes", "find", "selector", "element", "isCssRulesEnabled", "before", "after", "modified", "pseudoId", "place", "parentSelector", "createPseudoElement", "createPseudoRule", "pseudoIdClass", "parentTag", "pseudoTag", "placeClass", "pseudoElt", "selectorText", "cssText", "pseudoRule", "styleSheet", "imported", "link", "ruleApplies", "url", "createStyleSheetLink", "crossOrigin", "detailsQueue", "targets", "findElements", "sources", "source", "target", "attrs", "isImportant", "attr", "existingValue", "trigger", "triggerQueue", "triggerTarget", "exts", "api", "ROOT_SELECTOR", "observeRoots", "blockedRoots", "observer", "htmxClasses", "applyObservations", "newRoots", "removeRoots", "addRoots", "newRoot", "observeAttr", "root", "mutations", "groups", "mutation", "isFromHtmx", "group", "_observeAttr", "detail", "a", "o", "n", "c", "count", "node", "applyDataUrl", "loc", "root", "event", "scriptOrigin", "event", "path", "origin"]
}
